{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./node_modules/@ionic/core/dist/esm/framework-delegate-bda125fb.js","./src/app/paymentgateway/paymentgateway-routing.module.ts","./src/app/appversion.ts","./src/app/paymentgateway/paymentgateway.page.scss","./src/app/paymentgateway/paymentgateway.page.ts","./src/app/paymentgateway/paymentgateway.page.html","./src/app/data-resolver.service.ts","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./src/app/paymentgateway/paymentgateway.module.ts","./node_modules/@ionic/core/dist/esm/button-active-e272e3f1.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js"],"names":[],"mappings":"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;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;;;;;;;AC7GgB;AACM;AACkB;AAEpB;AAEqC;AAEvB;AACd;AACK;IAgBrC,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAdpC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kEAAmB;YACnB,8FAA+B;YAC/B,0DAAe;SAChB;QACD,YAAY,EAAE,CAAC,uEAAkB,CAAC;QAClC,SAAS,EAAC;YACR,+DAAM;SACP;KACF,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;AC1BrC;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,wEAAa;AACtB;AACA;AACA;AACA,mEAAmE,qDAAoB;AACvF,kEAAkE,qDAAsB;AACxF;AACA;AACA,MAAM,6DAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI","file":"common.js","sourcesContent":["const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { c as componentOnReady } from './helpers-cf6e85ee.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { PaymentgatewayPage } from './paymentgateway.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentgatewayPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PaymentgatewayPageRoutingModule {}\r\n","export const Appversion={\r\n    version:'1.1.3'\r\n}","export default \".error {\\n  color: #df3e3e;\\n  font-size: 11px;\\n  margin-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHBheW1lbnRnYXRld2F5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFDSiIsImZpbGUiOiJwYXltZW50Z2F0ZXdheS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3Ige1xyXG4gICAgY29sb3I6IHJnYigyMjMsIDYyLCA2Mik7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gIH0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { StorageService } from '../storage.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\n\r\n// import {\r\n//   IPayPalConfig,\r\n//   ICreateOrderRequest \r\n// } from 'ngx-paypal';\r\n\r\n@Component({\r\n  selector: 'app-paymentgateway',\r\n  templateUrl: './paymentgateway.page.html',\r\n  styleUrls: ['./paymentgateway.page.scss'],\r\n})\r\nexport class PaymentgatewayPage implements OnInit {\r\n  value: number=24;\r\n  user: any;\r\n \r\n\r\n  constructor(private storage:StorageService,\r\n    private navController:NavController) { \r\n   \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user= this.storage.getUser();\r\n\r\n  }\r\n  routerLink()\r\n  {\r\n    this.navController.navigateRoot('add-money');\r\n  }\r\n\r\n  select(e){\r\n    console.log(e);\r\n    this.value=parseInt(e.target.value);\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Order Design</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n    <ion-radio-group value=\\\"24\\\"  mode=\\\"md\\\" (ionChange)=\\\"select($event)\\\">\\r\\n      <ion-list-header>\\r\\n        <ion-label>Select priority for delivering design</ion-label>\\r\\n      </ion-list-header>\\r\\n  \\r\\n      <ion-item>\\r\\n        <ion-label>0-8 hrs</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" value=\\\"50\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n  \\r\\n      <ion-item>\\r\\n        <ion-label>8-12 hrs</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" value=\\\"36\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n  \\r\\n      <ion-item>\\r\\n        <ion-label>12-18hrs</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" value=\\\"30\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>18-24hrs</ion-label>\\r\\n        <ion-radio slot=\\\"start\\\" value=\\\"24\\\"></ion-radio>\\r\\n      </ion-item>\\r\\n    </ion-radio-group>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-grid>\\r\\n    <ion-row ion-padding>\\r\\n      <ion-col size=\\\"3.5\\\">\\r\\n        <ion-label>Left amount</ion-label>\\r\\n          <p style=\\\"text-align: center;font-size: 13px;\\\">{{user.amount}}</p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"0.5\\\" style=\\\"display: flex;align-items: flex-end;\\\">\\r\\n\\r\\n          <p style=\\\"text-align: center;font-size: 13px;\\\">+</p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <ion-label>Design amount</ion-label>\\r\\n        <p style=\\\"text-align: center;font-size: 13px;\\\">{{value}}</p>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <ion-label>Total cost</ion-label>\\r\\n        <p style=\\\"text-align: center;font-size: 13px;\\\">{{user.amount + value}}</p>\\r\\n      </ion-col>\\r\\n      \\r\\n        \\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <ion-button color=\\\"primary\\\">Add money</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\">\\r\\n        <ion-button color=\\\"warning\\\">Pay with wallet</ion-button>\\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"4\\\" >\\r\\n        <ion-button color=\\\"light\\\">Pay with card</ion-button>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  \\r\\n\\r\\n \\r\\n\\r\\n</ion-content>\\r\\n\";","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { ApiService } from './api.service';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataResolverService implements Resolve <Observable<any>>{\r\n  userId: any;\r\n\r\n  constructor(private ds: ApiService,private storageService:StorageService) {\r\n    this.userId = this.storageService.getUserID();\r\n   }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n    return this.ds.getUserData(this.userId).pipe(\r\n      take(1),\r\n      map(userdata => userdata)\r\n    )\r\n  }\r\n}\r\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentgatewayPageRoutingModule } from './paymentgateway-routing.module';\r\n\r\nimport { PaymentgatewayPage } from './paymentgateway.page';\r\nimport { NgxPayPalModule } from 'ngx-paypal';\r\nimport { Stripe } from '@ionic-native/stripe/ngx';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    PaymentgatewayPageRoutingModule,\r\n    NgxPayPalModule\r\n  ],\r\n  declarations: [PaymentgatewayPage],\r\n  providers:[\r\n    Stripe\r\n  ]\r\n})\r\nexport class PaymentgatewayPageModule {}\r\n","import { c as writeTask } from './index-3ccd7557.js';\nimport { createGesture } from './index-f49d994d.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n"],"sourceRoot":"webpack:///"}