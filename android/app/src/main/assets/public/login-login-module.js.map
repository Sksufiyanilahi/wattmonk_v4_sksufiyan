{"version":3,"sources":["./src/app/login/login.page.ts","./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login-routing.module.ts","./src/app/login/login.page.scss"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport {\r\n  ApiService\r\n} from '../api.service';\r\nimport {\r\n  UtilitiesService\r\n} from '../utilities.service';\r\nimport {\r\n  NavController\r\n} from '@ionic/angular';\r\nimport {\r\n  StorageService\r\n} from '../storage.service';\r\nimport {\r\n  ErrorModel\r\n} from '../model/error.model';\r\nimport { INVALID_EMAIL_MESSAGE, FIELD_REQUIRED } from '../model/constants';\r\nimport { Router } from '@angular/router';\r\nimport { ROLES } from '../contants';\r\nimport { NetworkdetectService } from '../networkdetect.service';\r\nimport { MixpanelService } from '../utilities/mixpanel.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n}\r\n)\r\nexport class LoginPage implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  isActiveToggleTextPassword = true;\r\n\r\n  emailError = INVALID_EMAIL_MESSAGE;\r\n  fieldRequired = FIELD_REQUIRED;\r\n  isLoggedInOnce = false;\r\n  netSwitch: any;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private utils: UtilitiesService,\r\n    private apiService: ApiService,\r\n    private storageService: StorageService,\r\n    private router: Router,\r\n    private network:NetworkdetectService,\r\n\r\n    private navController: NavController,\r\n    private mixpanelService:MixpanelService) {\r\n    this.isLoggedInOnce = this.storageService.isLoggedInOnce();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const EMAILPATTERN = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\r\n    this.loginForm = this.formBuilder.group({\r\n      identifier: new FormControl(this.storageService.getUserName(), [Validators.required, Validators.pattern(EMAILPATTERN)]),\r\n      password: new FormControl(this.storageService.getPassword(), [Validators.required, Validators.minLength(6)])\r\n    }\r\n    );\r\n\r\n  }\r\n\r\n  ionViewDidEnter(){\r\n    this.network.networkSwitch.subscribe(data=>{\r\n      this.netSwitch = data;\r\n      console.log(this.netSwitch);\r\n\r\n    })\r\n\r\nthis.network.networkDisconnect();\r\nthis.network.networkConnect();\r\n  }\r\n\r\n  login() {\r\n    if(!this.netSwitch){\r\n      this.utils.errorSnackBar('No internet connection');\r\n    }else{\r\n      console.log(this.loginForm);\r\n      if (this.loginForm.status === 'VALID') {\r\n        this.utils.showLoading('Logging In').then(() => {\r\n          this.apiService.login(this.loginForm.value).subscribe(response => {\r\n            this.utils.hideLoading().then(() => {\r\n              console.log('Res', response);\r\n              console.log(response);\r\n              this.mixpanelService.track(\"USER_LOGIN\", {\r\n                $id: response.user.id,\r\n                $email: response.user.email,\r\n                $name: response.user.firstname + response.user.lastname\r\n              });\r\n              if (response.user.role.id == ROLES.Surveyor) {\r\n                this.storageService.setUserName(this.loginForm.get('identifier').value);\r\n                this.storageService.setPassword(this.loginForm.get('password').value);\r\n\r\n                // this.storageService.setUser(response.user, response.jwt);\r\n\r\n                if (response.user.isdefaultpassword) {\r\n                  this.storageService.setJWTToken(response.jwt);\r\n                  this.apiService.refreshHeader();\r\n                  this.navController.navigateRoot(['changepassword'])\r\n                } else {\r\n                  this.storageService.setUser(response.user, response.jwt);\r\n                  this.apiService.refreshHeader();\r\n                  // this.navController.navigateRoot(['homepage']);\r\n                  this.navController.navigateRoot(['surveyoroverview']);\r\n                  if(response.user){\r\n                    this.utils.doCometUserLogin();\r\n                  }\r\n                }\r\n              } else if(response.user.role.id == ROLES.Designer){\r\n                // this.utils.errorSnackBar(\"Access Denied!! Soon we will be coming up with our platform accessibility.\");\r\n                this.storageService.setUserName(this.loginForm.get('identifier').value);\r\n                this.storageService.setPassword(this.loginForm.get('password').value);\r\n\r\n\r\n                if (response.user.isdefaultpassword) {\r\n                  this.storageService.setJWTToken(response.jwt);\r\n                  this.apiService.refreshHeader();\r\n                  this.navController.navigateRoot(['changepassword'])\r\n                } else {\r\n                  this.storageService.setUser(response.user, response.jwt);\r\n                  this.apiService.refreshHeader();\r\n                  this.navController.navigateRoot(['permitdesignoverview']);\r\n                  if(response.user){\r\n                    this.utils.doCometUserLogin();\r\n                  }\r\n                }\r\n              }\r\n\r\n              else if(response.user.role.id == ROLES.Analyst)\r\n              {\r\n                 this.storageService.setUserName(this.loginForm.get('identifier').value);\r\n                  this.storageService.setPassword(this.loginForm.get('password').value);\r\n\r\n                  if(response.user.isdefaultpassword){\r\n                      this.storageService.setJWTToken(response.jwt);\r\n                      this.apiService.refreshHeader();\r\n                      this.navController.navigateRoot(['changepassword'])\r\n                  } else{\r\n                    this.storageService.setUser(response.user, response.jwt);\r\n                    this.apiService.refreshHeader();\r\n                    this.navController.navigateRoot(['analystoverview']);\r\n                    if(response.user){\r\n                      this.utils.doCometUserLogin();\r\n                    }\r\n                  }\r\n              }\r\n              else if(response.user.role.id == ROLES.Peengineer)\r\n              {\r\n                 this.storageService.setUserName(this.loginForm.get('identifier').value);\r\n                  this.storageService.setPassword(this.loginForm.get('password').value);\r\n\r\n                  if(response.user.isdefaultpassword){\r\n                      this.storageService.setJWTToken(response.jwt);\r\n                      this.apiService.refreshHeader();\r\n                      this.navController.navigateRoot(['changepassword'])\r\n                  } else{\r\n                    this.storageService.setUser(response.user, response.jwt);\r\n                    this.apiService.refreshHeader();\r\n                    this.navController.navigateRoot(['peengineer']);\r\n                    if(response.user){\r\n                      this.utils.doCometUserLogin();\r\n                    }\r\n                  }\r\n              }\r\n              else{\r\n\r\n                 // this.utils.errorSnackBar(\"Access Denied!! Soon we will be coming up with our platform accessibility.\");\r\n                 this.storageService.setUserName(this.loginForm.get('identifier').value);\r\n                 this.storageService.setPassword(this.loginForm.get('password').value);\r\n                 this.storageService.setUser(response.user, response.jwt);\r\n                 this.apiService.refreshHeader();\r\n                 if (response.user.isdefaultpassword) {\r\n                  this.storageService.setJWTToken(response.jwt);\r\n                  this.apiService.refreshHeader();\r\n                   this.navController.navigateRoot(['changepassword'])\r\n                 } else {\r\n                  if(response.user.role.type==='clientsuperadmin' && (response.user.isonboardingcompleted == null || response.user.isonboardingcompleted == false)){\r\n\r\n                    this.navController.navigateRoot('onboarding');\r\n                    if(response.user){\r\n                      this.utils.doCometUserLogin();\r\n                    }\r\n                  }\r\n                  else{\r\n                   this.navController.navigateRoot(['/dashboard'])\r\n                   if(response.user){\r\n                    this.utils.doCometUserLogin();\r\n                  }\r\n                 }\r\n                }\r\n              }\r\n            });\r\n            this.apiService.emitUserNameAndRole(response.user);\r\n\r\n          }, responseError => {\r\n            this.utils.hideLoading().then(() => {\r\n              this.apiService.resetHeaders();\r\n              const error: ErrorModel = responseError.error;\r\n              // this.utils.errorSnackBar(error);\r\n              this.utils.errorSnackBar(\"Entered email and password combination doesn't match any of our records. Please try again.\");\r\n            });\r\n\r\n          });\r\n        });\r\n\r\n      } else {\r\n        this.apiService.resetHeaders();\r\n        this.utils.errorSnackBar(\"Entered email and password combination doesn't match any of our records. Please try again.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  public toggleTextPassword() {\r\n    this.isActiveToggleTextPassword = (this.isActiveToggleTextPassword == true) ? false : true;\r\n  }\r\n\r\n  getType() {\r\n    return this.isActiveToggleTextPassword ? 'password' : 'text';\r\n  }\r\n\r\n  get password() {\r\n    return this.loginForm.get('password');\r\n  }\r\n\r\n  changepassword() {\r\n    console.log('rrrrrrrrrrrrrrr');\r\n\r\n    this.router.navigate(['/changepassword'])\r\n  }\r\n\r\n\r\n}\r\n","export default \"<ion-content class=\\\"ion-padding login-background\\\">\\r\\n    <ion-grid class=\\\"ion-padding\\\">\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n                <span class=\\\"title text-bold\\\">\\r\\n                    Wattmonk\\r\\n                </span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n    </ion-grid>\\r\\n\\r\\n    <ion-grid class=\\\"ion-padding form-background\\\">\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n                <span class=\\\"subtitle\\\">\\r\\n                    Welcome\\r\\n                </span>\\r\\n                <span class=\\\"subtitle\\\" *ngIf=\\\"isLoggedInOnce\\\">\\r\\n                    back\\r\\n                </span>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n                <span class=\\\"subtitle-sub-text subtitle-dim-color\\\">\\r\\n                    sign in to continue\\r\\n                </span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n                <form [formGroup]=\\\"loginForm\\\" novalidate>\\r\\n                    <ion-grid class=\\\"ion-no-padding\\\">\\r\\n                        <ion-row class=\\\"ion-margin-top\\\">\\r\\n                            <ion-col size=\\\"12\\\">\\r\\n                                <ion-input type=\\\"email\\\" placeholder=\\\"your email address\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\"\\r\\n                                    formControlName=\\\"identifier\\\">\\r\\n                                </ion-input>\\r\\n                                <div class=\\\"error_div\\\">\\r\\n                                    <div *ngIf=\\\"loginForm.get('identifier').hasError('pattern') && loginForm.get('identifier').dirty\\\" >\\r\\n                                        <span class=\\\"error\\\">{{emailError}}</span>\\r\\n                                    </div> \\r\\n                                    <div *ngIf=\\\"loginForm.get('identifier').value === '' && loginForm.get('identifier').dirty\\\" >\\r\\n                                        <span class=\\\"error\\\">{{fieldRequired}}</span>\\r\\n                                    </div>      \\r\\n                                </div>  \\r\\n                            </ion-col>\\r\\n\\r\\n                            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\r\\n                                <div class=\\\"password_box\\\">\\r\\n                                    <ion-input type=\\\"password\\\" class=\\\"password_input\\\" [type]=\\\"getType()\\\" placeholder=\\\"your password\\\" formControlName=\\\"password\\\">\\r\\n                                    </ion-input>\\r\\n                                    <div class=\\\"eye_box\\\">\\r\\n                                        <ion-icon name=\\\"eye\\\" *ngIf=\\\"!this.isActiveToggleTextPassword\\\" (click)=\\\"toggleTextPassword()\\\" slot=\\\"end\\\"></ion-icon>\\r\\n                                        <ion-icon name=\\\"eye-off\\\" *ngIf=\\\"this.isActiveToggleTextPassword\\\" (click)=\\\"toggleTextPassword()\\\" slot=\\\"end\\\"></ion-icon>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <div class=\\\"error_div\\\">\\r\\n                                    <div *ngIf=\\\"password.errors?.minlength\\\">\\r\\n                                        <span class=\\\"error\\\">Invalid password</span>\\r\\n                                    </div>       \\r\\n                                </div>  \\r\\n                            </ion-col>\\r\\n\\r\\n                            <ion-col size=\\\"12\\\" class=\\\"forgot-password-text\\\">\\r\\n                                <p style=\\\"text-align: end\\\" class=\\\"ion-padding\\\" [routerLink]=\\\"['/forgot-password']\\\"\\r\\n                                    routerDirection=\\\"forward\\\">Forgot your password?</p>\\r\\n                            </ion-col>\\r\\n\\r\\n                            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\r\\n                                <h1 class=\\\"ion-no-margin ion-no-padding action-button-color\\\" (click)=\\\"login()\\\">\\r\\n                                    Login\\r\\n                                </h1>\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n                    </ion-grid>\\r\\n                </form>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","export default \".title {\\n  font-size: 3em;\\n}\\n\\n.text-bold {\\n  font-weight: bold;\\n}\\n\\n.subtitle {\\n  font-size: 2em;\\n  color: #434343;\\n}\\n\\nion-content.login-background {\\n  --background: white;\\n  background: linear-gradient(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.9)), url(\\\"/assets/images/login_background.png\\\");\\n  background-position: bottom;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n}\\n\\n.form-background {\\n  background: linear-gradient(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.9)), url(\\\"/assets/images/wattmonk_logo.png\\\");\\n  background-position: top;\\n  background-repeat: no-repeat;\\n  background-size: contain;\\n}\\n\\n.subtitle-sub-text {\\n  font-size: 1.8em;\\n  color: #A5A095;\\n}\\n\\n.forgot-password-text {\\n  color: #7DA4DD;\\n}\\n\\n.email_valid {\\n  color: #495057 !important;\\n}\\n\\n.password_box {\\n  display: flex;\\n  border-bottom: 1px solid #ced4da !important;\\n}\\n\\n.password_input {\\n  margin-bottom: -5px;\\n  font-size: 14px;\\n}\\n\\n.eye_box {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.error {\\n  color: #df3e3e;\\n  font-size: 11px;\\n  margin-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGxvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7RUFDQSwySEFBQTtFQUNBLDJCQUFBO0VBQ0EsNEJBQUE7RUFDQSx3QkFBQTtBQUNGOztBQUVBO0VBQ0Usd0hBQUE7RUFDQSx3QkFBQTtFQUNBLDRCQUFBO0VBQ0Esd0JBQUE7QUFDRjs7QUFJQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQURGOztBQUlBO0VBQ0UsY0FBQTtBQURGOztBQUlBO0VBQ0UseUJBQUE7QUFERjs7QUFJQTtFQUNFLGFBQUE7RUFDQSwyQ0FBQTtBQURGOztBQUtBO0VBQ0UsbUJBQUE7RUFDQSxlQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7QUFGRiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUge1xyXG4gIGZvbnQtc2l6ZTogM2VtO1xyXG59XHJcblxyXG4udGV4dC1ib2xkIHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnN1YnRpdGxlIHtcclxuICBmb250LXNpemU6IDJlbTtcclxuICBjb2xvcjogIzQzNDM0MztcclxufVxyXG5cclxuaW9uLWNvbnRlbnQubG9naW4tYmFja2dyb3VuZCB7XHJcbiAgLS1iYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSkpLCB1cmwoXCIvYXNzZXRzL2ltYWdlcy9sb2dpbl9iYWNrZ3JvdW5kLnBuZ1wiKTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b207XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XHJcbn1cclxuXHJcbi5mb3JtLWJhY2tncm91bmQge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSksIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KSksIHVybChcIi9hc3NldHMvaW1hZ2VzL3dhdHRtb25rX2xvZ28ucG5nXCIpO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IHRvcDtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxufVxyXG5cclxuXHJcblxyXG4uc3VidGl0bGUtc3ViLXRleHQge1xyXG4gIGZvbnQtc2l6ZTogMS44ZW07XHJcbiAgY29sb3I6ICNBNUEwOTU7XHJcbn1cclxuXHJcbi5mb3Jnb3QtcGFzc3dvcmQtdGV4dCB7XHJcbiAgY29sb3I6ICM3REE0REQ7XHJcbn1cclxuXHJcbi5lbWFpbF92YWxpZCB7XHJcbiAgY29sb3I6ICM0OTUwNTcgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnBhc3N3b3JkX2JveCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NlZDRkYSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuLnBhc3N3b3JkX2lucHV0IHtcclxuICBtYXJnaW4tYm90dG9tOiAtNXB4O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLmV5ZV9ib3gge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmVycm9yIHtcclxuICBjb2xvcjogcmdiKDIyMywgNjIsIDYyKTtcclxuICBmb250LXNpemU6IDExcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDVweDtcclxufVxyXG4iXX0= */\";"],"sourceRoot":"webpack:///"}