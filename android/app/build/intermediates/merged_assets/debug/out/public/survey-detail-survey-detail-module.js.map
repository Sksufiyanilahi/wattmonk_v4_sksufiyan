{"version":3,"sources":["./src/app/survey-detail/survey-detail.module.ts","./src/app/survey-detail/survey-detail-routing.module.ts","./src/app/survey-detail/modal-page/modal-page.component.html","./src/app/survey-detail/survey-detail.page.html","./src/app/survey-detail/modal-page/modal-page.component.ts","./node_modules/@ionic-native/photo-viewer/__ivy_ngcc__/ngx/index.js","./src/app/survey-detail/survey-detail.page.scss","./src/app/survey-detail/survey-detail.page.ts","./src/app/survey-detail/modal-page/modal-page.component.scss"],"names":[],"mappings":"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","file":"survey-detail-survey-detail-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SurveyDetailPageRoutingModule } from './survey-detail-routing.module';\r\n\r\nimport { SurveyDetailPage } from './survey-detail.page';\r\nimport { IonBottomDrawerModule } from 'ion-bottom-drawer';\r\nimport { UtilitiesModule } from '../utilities/utilities.module';\r\nimport { LaunchNavigator } from '@ionic-native/launch-navigator/ngx';\r\nimport { ModalPageComponent } from './modal-page/modal-page.component';\r\nimport { PhotoViewer } from '@ionic-native/photo-viewer/ngx';\r\nimport { LinkifyPipe } from '../linkify.pipe';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    IonBottomDrawerModule,\r\n    SurveyDetailPageRoutingModule,\r\n    UtilitiesModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [SurveyDetailPage,ModalPageComponent],\r\n  providers: [\r\n    LaunchNavigator,\r\n    PhotoViewer\r\n  ],\r\n  entryComponents: [ModalPageComponent],\r\n})\r\nexport class SurveyDetailPageModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SurveyDetailPage } from './survey-detail.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SurveyDetailPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SurveyDetailPageRoutingModule {}\r\n","export default \"<p>\\r\\n  modal-page works!\\r\\n</p>\\r\\n\";","export default \"<ion-header class=\\\"ion-no-border white-bg\\\" *ngIf=\\\"survey\\\">\\r\\n    <ion-grid class=\\\"ion-padding-top ion-padding-start ion-padding-end header-bg\\\">\\r\\n        <ion-row>\\r\\n            <ion-col size=\\\"2\\\">\\r\\n                <ion-button fill=\\\"clear\\\" size=\\\"small\\\" class=\\\"ion-no-padding\\\" (click)=\\\"goBack()\\\">\\r\\n                    <ion-img src=\\\"/assets/images/back.svg\\\" class=\\\"action-icon\\\"></ion-img>\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"6\\\" *ngIf=\\\"iseditable\\\">\\r\\n                <ion-button fill=\\\"clear\\\" disabled=\\\"true\\\" size=\\\"small\\\" class=\\\"ion-no-padding action-icon\\\">\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n            <!-- <ion-col>\\r\\n                <ion-grid class=\\\"ion-align-items-center ion-justify-content-center\\\">\\r\\n                    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\r\\n                        <span class=\\\"survey-name ion-text-center\\\">{{survey.name}}</span>\\r\\n                    </ion-row>\\r\\n                    <ion-row class=\\\"ion-align-items-center ion-justify-content-center\\\">\\r\\n                        <span class=\\\"survey-email ion-text-center\\\">{{survey.email}}</span>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-col> -->\\r\\n            <ion-col  size=\\\"2\\\" *ngIf=\\\"survey.createdby.id == user.id && (survey.status == 'created' || survey.status == 'requestdeclined')\\\" style=\\\"text-align: right !important;\\\">\\r\\n                <ion-button fill=\\\"clear\\\" size=\\\"small\\\" class=\\\"ion-no-padding\\\"\\r\\n                            [routerLink]=\\\"['/schedule/survey/',surveyId]\\\"\\r\\n                            routerDirection=\\\"forward\\\">\\r\\n                    <ion-img src=\\\"/assets/images/edit.svg\\\" class=\\\"action-icon\\\"></ion-img>\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"2\\\" *ngIf=\\\"survey.createdby.id == user.id && (survey.status == 'created' || survey.status == 'requestdeclined')\\\" style=\\\"text-align: right !important;\\\"\\r\\n            size=\\\"2\\\" >\\r\\n                <ion-button fill=\\\"clear\\\" size=\\\"small\\\" class=\\\"ion-no-padding\\\" (click)=\\\"deleteSurvey()\\\">\\r\\n                    <ion-img src=\\\"/assets/images/trash.svg\\\" class=\\\"action-icon\\\"></ion-img>\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"auto\\\" *ngIf=\\\"!iseditable\\\">\\r\\n                <ion-button fill=\\\"clear\\\" disabled=\\\"true\\\" size=\\\"small\\\" class=\\\"ion-no-padding action-icon\\\">\\r\\n                </ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n    <ion-grid class=\\\"position-relative ion-no-padding\\\">\\r\\n        <ion-row class=\\\"ion-no-padding border-header header-half-height\\\">\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-no-padding header-half-height\\\">\\r\\n\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-no-padding position-absolute header-icon-position full-width\\\">\\r\\n            <ion-col class=\\\"flex-center\\\">\\r\\n                <ion-img src=\\\"/assets/detailpage/Survey.svg\\\" class=\\\"header-icon\\\"></ion-img>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding page-text-color\\\" *ngIf='survey' >\\r\\n    <!-- <ion-grid fixed> -->\\r\\n        <!-- <ion-row> -->\\r\\n            <!-- <ion-col> -->\\r\\n                <ion-segment scrollable [(ngModel)]=\\\"segments\\\" class=\\\"wd140 colorwht\\\" *ngIf='survey.status ==\\\"surveycompleted\\\"' mode=\\\"md\\\">\\r\\n                <ion-segment-button value=\\\"SiteDetils\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        Site Details\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n                <ion-segment-button value=\\\"electricals\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        Electrical\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n                <!-- <ion-segment-button value=\\\"solarPanel\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        Solar Panel\\r\\n                    </ion-label>\\r\\n                </ion-segment-button> -->\\r\\n                <ion-segment-button value=\\\"roof\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        Roof\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n                <ion-segment-button value=\\\"attic\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        Attic\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n                <ion-segment-button value=\\\"appliances\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        Appliances\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n                <!-- <ion-segment-button value=\\\"equipmentMarketing\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label style=\\\"width:100%\\\">\\r\\n                        Equipment Marking\\r\\n                    </ion-label>\\r\\n                </ion-segment-button> -->\\r\\n                <ion-segment-button value=\\\"generalInfo\\\" class=\\\"wd140 colorwht\\\">\\r\\n                    <ion-label>\\r\\n                        General information\\r\\n                    </ion-label>\\r\\n                </ion-segment-button>\\r\\n                </ion-segment>\\r\\n                <div [ngSwitch]=\\\"segments\\\">\\r\\n                    <ion-grid *ngSwitchCase=\\\"'SiteDetils'\\\">\\r\\n                        <ion-row class=\\\"bkg\\\">\\r\\n                            <ion-col class=\\\"hgt-margin\\\">\\r\\n                                <!-- <ion-item> -->\\r\\n                                    <label>Customer Details</label>\\r\\n                                <!-- </ion-item> -->\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">Name</ion-col>\\r\\n                            <ion-col size=\\\"6\\\">{{survey.name}}</ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">Address</ion-col>\\r\\n                            <ion-col size=\\\"6\\\">{{survey.address}}</ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">Email</ion-col>\\r\\n                            <ion-col size=\\\"6\\\">{{survey.email}}</ion-col>\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row class=\\\"bkg\\\">\\r\\n                            <ion-col class=\\\"hgt-margin\\\">\\r\\n                                <!-- <ion-item> -->\\r\\n                                    <label>Job Details</label>\\r\\n                                <!-- </ion-item> -->\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">Job</ion-col>\\r\\n                            <ion-col size=\\\"6\\\">{{survey.jobtype}}</ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">Scheduled On</ion-col>\\r\\n                            <ion-col size=\\\"6\\\">{{utilities.formatDateInDisplayFormat(survey.datetime)}} {{utilities.formatTimeInDisplayFormat(survey.datetime)}}</ion-col>\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row class=\\\"bkg\\\">\\r\\n                            <ion-col size=\\\"6\\\" class=\\\"hgt-margin\\\">\\r\\n                                <!-- <ion-item> -->\\r\\n                                    <label>Comments</label>\\r\\n                                <!-- </ion-item> -->\\r\\n                            </ion-col>\\r\\n\\r\\n                            <ion-col size=\\\"6\\\" *ngFor=\\\"let comment of survey.comments\\\">\\r\\n                                <p  [innerHTML]=\\\"comment?.message | linkify\\\" class=\\\"comment font\\\" style=\\\"text-align:left;margin:0px\\\"></p>\\r\\n                                <p class=\\\"comment-by\\\" style=\\\"text-align:left;margin-top:0px\\\">Posted by {{comment.createdby?.firstname}}\\r\\n                                    {{comment.createdby?.lastname}}</p>\\r\\n                            </ion-col>\\r\\n                            <!-- <ion-col style=\\\"text-align: right;\\\">{{comments.createdBy.firstname}} &nbsp;{{comments.createdBy.lastname}} </ion-col>\\r\\n                            <ion-col style=\\\"text-align: right;\\\">{{comments.createdBy.updated_at | date:'dd/MM/yyyy'}}</ion-col> -->\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row *ngIf=\\\"survey.reviewissues || survey.reviewissues !==null  \\\" class=\\\"ion-no-padding ion-margin-top\\\">\\r\\n                            <ion-col size=\\\"6\\\">\\r\\n                                <span class=\\\"models font\\\"> Review Comments</span>\\r\\n                            </ion-col>\\r\\n                            <!-- <div> -->\\r\\n\\r\\n                            <ion-col size=\\\"6\\\"  class=\\\"ion-no-padding\\\">\\r\\n                                <div >\\r\\n                                    <p class=\\\"comment font\\\" style=\\\"text-align: right;margin:0px\\\">{{survey?.reviewissues}}</p>\\r\\n                                    <p class=\\\"comment-by\\\" style=\\\"text-align: right;margin-top:0px\\\">Posted by {{survey.reviewassignedto?.firstname}}\\r\\n                                        {{survey.reviewassignedto?.lastname}}</p>\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                            <!-- <ion-col size=\\\"12\\\" class=\\\"ion-no-padding ion-text-end\\\">\\r\\n\\r\\n                                        </ion-col> -->\\r\\n\\r\\n                            <!-- </div> -->\\r\\n\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row class=\\\"bkg\\\" *ngIf=\\\"survey.assignedto!== null\\\">\\r\\n                            <ion-col class=\\\"hgt-margin\\\">\\r\\n                                <!-- <ion-item> -->\\r\\n                                    <label>Assignee Details</label>\\r\\n                                <!-- </ion-item> -->\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row *ngIf=\\\"survey.assignedto!== null\\\">\\r\\n                            <ion-col size=\\\"6\\\">Assigned To</ion-col>\\r\\n                            <ion-col size=\\\"6\\\">{{survey.assignedto?.firstname}} &nbsp; {{survey.assignedto?.lastname}}</ion-col>\\r\\n                        </ion-row>\\r\\n                    </ion-grid>\\r\\n\\r\\n                   <ion-grid *ngSwitchCase=\\\"'electricals'\\\">\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-segment scrollable [(ngModel)]=\\\"electricals\\\" class=\\\"segment-btn\\\">\\r\\n                                <ion-segment-button class=\\\"wd140\\\" value=\\\"MSB\\\">\\r\\n                                    <ion-label>MSP</ion-label>\\r\\n                                </ion-segment-button>\\r\\n                                <ion-segment-button value=\\\"utilityMeter\\\" class=\\\"wd140\\\">\\r\\n                                    <ion-label>Utility Meter</ion-label>\\r\\n                                </ion-segment-button>\\r\\n                                <ion-segment-button *ngIf=\\\"survey.existingsolarsystem\\\" value=\\\"pvMeter\\\" class=\\\"wd140\\\">\\r\\n                                    <ion-label>PV Inverter</ion-label>\\r\\n                                </ion-segment-button>\\r\\n                                <ion-segment-button value=\\\"acDisconnect\\\" class=\\\"wd140\\\" *ngIf=\\\"survey.existingsolarsystem\\\">\\r\\n                                    <ion-label>AC Disconnected</ion-label>\\r\\n                                </ion-segment-button>\\r\\n                            </ion-segment>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                            <div [ngSwitch]=\\\"electricals\\\">\\r\\n                                <div *ngSwitchCase=\\\"'MSB'\\\">\\r\\n\\r\\n\\r\\n                                    <ion-slides pager=\\\"true\\\" zoom [options]=\\\"slideOpts\\\" class=\\\"image-slider\\\">\\r\\n\\r\\n                                        <ion-slide *ngFor=\\\"let elecmsb of survey.mspimages,let i=index\\\">\\r\\n                                            <ion-row><ion-col size=\\\"12\\\" *ngIf=\\\"i==0\\\"><span>MSP is located :</span>&nbsp;<span>{{survey.msplocation | titlecase}} for this site</span></ion-col>\\r\\n                                                <ion-col size=\\\"12\\\" *ngIf=\\\"i==1\\\"><span>MSP/BUS Rating is :</span>&nbsp;<span>{{survey.msprating}} </span></ion-col>\\r\\n                                                <ion-col size=\\\"12\\\" *ngIf=\\\"i==2\\\"><span>Main breaker size is :</span>&nbsp;<span>{{survey.mainbreakersize}} for this site </span></ion-col>\\r\\n                                                <ion-col size=\\\"12\\\" *ngIf=\\\"i==3\\\"><span>Main Breaker location in MSP is :</span>&nbsp;<span>{{survey.mspbreaker | titlecase}} for this site </span></ion-col>\\r\\n                                            <div class=\\\"swiper-zoom-container\\\">\\r\\n\\r\\n                                                <img [src]=\\\"elecmsb.url\\\" (click)=\\\"showimage(elecmsb.url)\\\" />\\r\\n                                            </div>\\r\\n                                        </ion-row>\\r\\n                                        </ion-slide>\\r\\n                                    </ion-slides>\\r\\n                                </div>\\r\\n                                <div *ngSwitchCase=\\\"'utilityMeter'\\\">\\r\\n                                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                                        <ion-slide *ngFor=\\\"let elecutility of survey.utilitymeterimages,let i=index\\\">\\r\\n                                            <ion-row><ion-col size=\\\"12\\\" *ngIf=\\\"i==0\\\"><span>Utility meter is :</span>&nbsp;<span>{{survey.utilitymeter | titlecase}} to MSP </span></ion-col>\\r\\n                                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                                <img [src]=\\\"elecutility.url\\\" (click)=\\\"showimage(elecutility.url)\\\" width='100%'/>\\r\\n                                            </div>\\r\\n                                        </ion-row>\\r\\n                                        </ion-slide>\\r\\n                                    </ion-slides>\\r\\n                                </div>\\r\\n                                <div *ngSwitchCase=\\\"'pvMeter'\\\">\\r\\n                                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zom=\\\"true\\\">\\r\\n\\r\\n                                        <ion-slide *ngFor=\\\"let elecpvmeter of survey.pvmeterimages,let i=index\\\">\\r\\n                                            <ion-row><ion-col size =\\\"12\\\"><span>PV inverter is located :</span>&nbsp;<span>{{survey.pvinverterlocation | titlecase}} the site </span></ion-col>\\r\\n                                                <ion-col size =\\\"12\\\"><span>Inverter manufacturer and Model is :</span>&nbsp;<span>{{survey.invertermake | titlecase}} {{survey.invertermodel | titlecase}}</span></ion-col>\\r\\n\\r\\n                                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                                <img [src]=\\\"elecpvmeter.url\\\" (click)=\\\"showimage(elecpvmeter.url)\\\" width='100%'/>\\r\\n                                            </div>\\r\\n                                        </ion-row>\\r\\n                                        </ion-slide>\\r\\n                                    </ion-slides>\\r\\n                                </div>\\r\\n                                <div *ngSwitchCase=\\\"'acDisconnect'\\\">\\r\\n                                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                                        <ion-slide *ngFor=\\\"let elecacdisconnect of survey.acdisconnectimages\\\">\\r\\n                                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                                <img [src]=\\\"elecacdisconnect.url\\\" (click)=\\\"showimage(elecacdisconnect.url)\\\" width='100%'/>\\r\\n                                            </div>\\r\\n\\r\\n                                        </ion-slide>\\r\\n                                    </ion-slides>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                 </ion-grid>\\r\\n                   <ion-grid *ngSwitchCase=\\\"'solarPanel'\\\">\\r\\n                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                        <ion-slide *ngFor=\\\"let solarpanel of survey.solarpanelsimages\\\">\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                            <h2 class=\\\"position-fix\\\">{{solarpanel.name}}</h2>\\r\\n                                <img [src]=\\\"solarpanel.url\\\" (click)=\\\"showimage(solarpanel.url)\\\"/>\\r\\n                            </div>\\r\\n                        </ion-slide>\\r\\n                    </ion-slides>\\r\\n                 </ion-grid>\\r\\n                   <ion-grid *ngSwitchCase=\\\"'roof'\\\">\\r\\n                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                        <ion-slide *ngFor=\\\"let roof of survey.roofimages,let i=index\\\">\\r\\n                            <ion-row>\\r\\n                                <ion-col size =\\\"12\\\"><span *ngIf=\\\"i==0\\\">Roof Tilt :</span>&nbsp;<span>{{survey.rooftilt + ' ' + 'degrees'}} </span></ion-col>\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                <h2 class=\\\"position-fix\\\">{{roof.name}}</h2>\\r\\n                                <img [src]=\\\"roof.url\\\" (click)=\\\"showimage(roof.url)\\\" />\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        </ion-slide>\\r\\n                        <ion-slide *ngFor=\\\"let roofdimension of survey.roofdimensionimages,let i=index\\\">\\r\\n                            <ion-row>\\r\\n                                <!-- <ion-col size =\\\"12\\\"><span *ngIf=\\\"i=='0'\\\">Roof Dimension :</span>&nbsp;<span>{{survey.numberofmodules}} </span></ion-col> -->\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                <h2 class=\\\"position-fix\\\">{{roofdimension?.name}}</h2>\\r\\n                                <img [src]=\\\"roofdimension.url\\\" (click)=\\\"showimage(roofdimension.url)\\\" />\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        </ion-slide>\\r\\n                        <ion-slide *ngFor=\\\"let roofobstacle of survey.obstaclesimages,let i=index\\\">\\r\\n                            <ion-row>\\r\\n                                <!-- <ion-col size =\\\"12\\\"><span *ngIf=\\\"i=='0'\\\">Roof Dimension :</span>&nbsp;<span>{{survey.numberofmodules}} </span></ion-col> -->\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                <h2 class=\\\"position-fix\\\">{{roofobstacle?.name}}</h2>\\r\\n                                <img [src]=\\\"roofobstacle.url\\\" (click)=\\\"showimage(roofobstacle.url)\\\" />\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        </ion-slide>\\r\\n                        <ion-slide *ngFor=\\\"let roofobstacledimension of survey.obstaclesdimensionsimages,let i=index\\\">\\r\\n                            <ion-row>\\r\\n                                <!-- <ion-col size =\\\"12\\\"><span *ngIf=\\\"i=='0'\\\">Roof Dimension :</span>&nbsp;<span>{{survey.numberofmodules}} </span></ion-col> -->\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                <h2 class=\\\"position-fix\\\">{{roofobstacledimension?.name}}</h2>\\r\\n                                <img [src]=\\\"roofobstacledimension.url\\\" (click)=\\\"showimage(roofobstacledimension.url)\\\" />\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        </ion-slide>\\r\\n                    </ion-slides>\\r\\n                 </ion-grid>\\r\\n                 <ion-grid *ngSwitchCase=\\\"'attic'\\\">\\r\\n                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                        <ion-slide *ngFor=\\\"let attic of survey.atticimages,let i=index\\\">\\r\\n                            <ion-row>\\r\\n                                <ion-col size =\\\"12\\\" *ngIf=\\\"i==0\\\"><span >Framing is :</span>&nbsp;<span>{{survey.framing}} </span></ion-col>\\r\\n                                <ion-col size =\\\"12\\\" *ngIf=\\\"i==1\\\"><span >Framing size is : </span>&nbsp;<span>{{survey.framingsize}} </span></ion-col>\\r\\n                                <ion-col size =\\\"12\\\" *ngIf=\\\"i==2\\\"><span >Distance between two rafts : </span>&nbsp;<span>{{survey.distancebetweentworafts}} </span></ion-col>\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n\\r\\n                                <img [src]=\\\"attic.url\\\" (click)=\\\"showimage(attic.url)\\\" />\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        </ion-slide>\\r\\n                    </ion-slides>\\r\\n                 </ion-grid>\\r\\n                   <ion-grid *ngSwitchCase=\\\"'appliances'\\\">\\r\\n                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                        <ion-slide *ngFor=\\\"let appliance of survey.appliancesimages\\\">\\r\\n                            <ion-row>\\r\\n                                <ion-col size=\\\"12\\\"><span>Appliance name is:</span>&nbsp;<span>{{appliance.name}}</span> </ion-col>\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                <h2 class=\\\"position-fix\\\">{{appliance.name}}</h2>\\r\\n                                <img [src]=\\\"appliance.url\\\"  (click)=\\\"showimage(appliance.url)\\\"/>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n                        </ion-slide>\\r\\n                    </ion-slides>\\r\\n                 </ion-grid>\\r\\n                   <ion-grid *ngSwitchCase=\\\"'equipmentMarketing'\\\">\\r\\n                    <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\" zoom=\\\"true\\\">\\r\\n                        <ion-slide >\\r\\n                            <div class=\\\"swiper-zoom-container\\\">\\r\\n                                <h2 class=\\\"position-fix\\\">{{survey.electricalslocation.name}}</h2>\\r\\n                                <img [src]=\\\"survey.electricalslocation.url\\\"  (click)=\\\"showimage(survey.electricalslocation.url)\\\"/>\\r\\n                            </div>\\r\\n                        </ion-slide>\\r\\n                    </ion-slides>\\r\\n                 </ion-grid>\\r\\n                   <ion-grid *ngSwitchCase=\\\"'generalInfo'\\\">\\r\\n                    <ion-row class=\\\"bkg\\\">\\r\\n                        <ion-col class=\\\"hgt-margin\\\">\\r\\n                            <!-- <ion-item> -->\\r\\n                                <label>Details</label>\\r\\n                            <!-- </ion-item> -->\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <!-- <ion-row>\\r\\n                        <ion-col size=\\\"6\\\">Existing Modules Brand</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey.modulemake.name}}</ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col size=\\\"6\\\">Existing Modules Model</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey.modulemodel.name}}</ion-col>\\r\\n                    </ion-row> -->\\r\\n                    <ion-row>\\r\\n                        <ion-col size=\\\"6\\\">Battery System</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey.batterysystem}}</ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row *ngIf=\\\"survey.batterysystem=='true'\\\">\\r\\n                        <ion-col size=\\\"6\\\">Comments</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey.comments[0]?.message}}</ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col size=\\\"6\\\">Existing Solar System</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey.existingsolarsystem}}</ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col size=\\\"6\\\">Interconnection</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey.interconnection}}</ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col size=\\\"6\\\">Service Feed Source</ion-col>\\r\\n                        <ion-col size=\\\"6\\\">{{survey?.servicefeedsource}}</ion-col>\\r\\n                    </ion-row>\\r\\n\\r\\n                 </ion-grid>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <!-- <ion-content [fullscreen]=\\\"true\\\" class=\\\"ion-padding\\\"> -->\\r\\n\\r\\n\\r\\n                <!-- </ion-content> -->\\r\\n            <!-- </ion-col> -->\\r\\n        <!-- </ion-row> -->\\r\\n    <!-- </ion-grid> -->\\r\\n    <!-- <ion-grid *ngIf=\\\"survey\\\" class=\\\"page-text-color\\\">\\r\\n        <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n                <span (click)=\\\"openAddressOnMap(survey.address)\\\" class=\\\"address\\\">{{survey.address}}</span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\">\\r\\n                <span class=\\\"input-placeholder\\\">date and time</span>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n                <div class=\\\"d-flex\\\">\\r\\n                    <div class=\\\"d-flex flex-column\\\">\\r\\n                        <div class=\\\"main-background d-flex flex-row align-center justify-center\\\">\\r\\n                            <div class=\\\"d-flex flex-column align-center justify-center ion-padding date-background\\\">\\r\\n                                <span class=\\\"month\\\">{{survey.datetime | date: 'MMM'}}</span>\\r\\n                                <span class=\\\"day\\\">{{survey.datetime | date: 'dd'}}</span>\\r\\n                            </div>\\r\\n                            <div class=\\\"ion-padding\\\">\\r\\n                                <span class=\\\"time\\\">{{survey.datetime | date: 'hh : mm a'}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"auto\\\" *ngIf=\\\"iseditable\\\">\\r\\n                <div class=\\\"d-flex flex-column align-center justify-center\\\" (click)=\\\"reschedule()\\\">\\r\\n                    <ion-img src=\\\"/assets/images/schedule.svg\\\" class=\\\"reschedule-icon\\\"></ion-img>\\r\\n                    <span>Reschedule</span>\\r\\n                </div>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-no-padding\\\">\\r\\n            <ion-col><span class=\\\"model-type\\\">jobtype</span></ion-col>\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n                <span class=\\\"model-name\\\">{{survey.jobtype}}</span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\">\\r\\n                <span class=\\\"models\\\">Solar Details</span>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n                <ion-grid class=\\\"ion-no-padding\\\">\\r\\n                    <ion-row class=\\\"ion-no-padding\\\">\\r\\n                        <ion-col><span class=\\\"model-type\\\">make</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.modulemake\\\">{{survey.modulemake.name}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.modulemake\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">model</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.modulemodel\\\">{{survey.modulemodel.name}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.modulemodel\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\">\\r\\n                <span class=\\\"models\\\">Inverter Details</span>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n                <ion-grid class=\\\"ion-no-padding\\\">\\r\\n                    <ion-row class=\\\"ion-no-padding\\\">\\r\\n                        <ion-col><span class=\\\"model-type\\\">make</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.invertermake\\\">{{survey.invertermake}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.invertermake\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">model</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.invertermodel\\\">{{survey.invertermodel}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.invertermodel\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col>\\r\\n                <ion-grid class=\\\"ion-no-padding\\\">\\r\\n                    <ion-row class=\\\"ion-no-padding\\\">\\r\\n                        <ion-col><span class=\\\"model-type\\\">utility</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.utility\\\">{{survey.utility.name}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.utility\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row class=\\\"ion-no-padding\\\">\\r\\n                        <ion-col><span class=\\\"model-type\\\">msp location</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.msplocation\\\">{{survey.msplocation}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.msplocation\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">msp breaker</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.mspbreaker\\\">{{survey.mspbreaker}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.mspbreaker\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">msp rating</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.msprating\\\">{{survey.msprating}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.msprating\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">main breaker size</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.mainbreakersize\\\">{{survey.mainbreakersize}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.mainbreakersize\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col>\\r\\n                <ion-grid class=\\\"ion-no-padding\\\">\\r\\n                    <ion-row class=\\\"ion-no-padding\\\">\\r\\n                        <ion-col><span class=\\\"model-type\\\">pv meter</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.pvmeter\\\">{{survey.pvmeter}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.pvmeter\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">pv inverter location</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\"\\r\\n                                  *ngIf=\\\"survey.pvinverterlocation\\\">{{survey.pvinverterlocation}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.pvinverterlocation\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-margin-top\\\">\\r\\n            <ion-col>\\r\\n                <ion-grid class=\\\"ion-no-padding\\\">\\r\\n                    <ion-row class=\\\"ion-no-padding\\\">\\r\\n                        <ion-col><span class=\\\"model-type\\\">utility meter</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.utilitymeter\\\">{{survey.utilitymeter}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.utilitymeter\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">ac disconnect</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.acdisconnect\\\">{{survey.acdisconnect}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.acdisconnect\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">no of modules</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"survey.numberofmodules\\\">{{survey.numberofmodules}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.numberofmodules\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">service feed source</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\"\\r\\n                                  *ngIf=\\\"survey.servicefeedsource\\\">{{survey.servicefeedsource}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.servicefeedsource\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col><span class=\\\"model-type\\\">service feed source</span></ion-col>\\r\\n                        <ion-col size=\\\"auto\\\">\\r\\n                            <span class=\\\"model-name\\\"\\r\\n                                  *ngIf=\\\"survey.interconnection\\\">{{survey.interconnection}}</span>\\r\\n                            <span class=\\\"model-name\\\" *ngIf=\\\"!survey.interconnection\\\">n/a</span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center ion-justify-content-center ion-margin-top\\\">\\r\\n            <ion-col class=\\\"ion-no-padding\\\">\\r\\n                <span class=\\\"data-header\\\">gallery</span>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"auto\\\" [routerLink]=\\\"['/gallery/', surveyId]\\\"\\r\\n                     routerDirection=\\\"forward\\\">\\r\\n                <span>View all</span>\\r\\n            </ion-col>\\r\\n            <ion-col class=\\\"ion-align-items-center d-flex\\\" size=\\\"12\\\">\\r\\n                <img src=\\\"/assets/images/images.svg\\\" class=\\\"image-count\\\">\\r\\n                <span>{{getSurveyImages()}} images</span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-no-padding ion-margin-top\\\">\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n                <span class=\\\"data-header\\\">comments</span>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n                <span class=\\\"data-point\\\">\\\"{{survey.comments}}\\\"</span>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-no-padding ion-text-end\\\">\\r\\n                <span class=\\\"comment-by\\\">Posted by {{survey.createdby.firstname}} {{survey.createdby.lastname}}</span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col><span class=\\\"model-type\\\">created at</span></ion-col>\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n                <span class=\\\"model-name\\\">{{survey.created_at | date: 'dd/MM/yyyy hh:mm a'}}</span>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-no-padding ion-margin-top ion-justify-content-center ion-align-items-center\\\"\\r\\n                 *ngIf=\\\"assigned\\\">\\r\\n            <ion-col class=\\\"ion-justify-content-center ion-align-items-center\\\"><span\\r\\n                    class=\\\"model-type\\\">assigned to</span></ion-col>\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n                <div class=\\\"selected d-flex\\\">\\r\\n                    <img *ngIf=\\\"survey.assignedto.contractorlogo && survey.assignedto.contractorlogo.logo\\\" [src]=\\\"survey.assignedto.contractorlogo.logo.url\\\"\\r\\n                         class=\\\"assignee-image\\\"/>\\r\\n                    <div *ngIf=\\\"!survey.assignedto.contractorlogo || !survey.assignedto.contractorlogo.logo\\\"\\r\\n                         class=\\\"assignee-image d-flex flex-row align-center justify-center\\\">\\r\\n                        <div class=\\\"name_div\\\">\\r\\n                            <span style=\\\"text-transform: capitalize;\\\">{{survey.assignedto.firstname.substring(0, 1)}}{{survey.assignedto.lastname.substring(0, 1)}}</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-no-padding ion-margin-top\\\" *ngIf=\\\"!assigned\\\">\\r\\n            <ion-col size=\\\"12\\\">\\r\\n                <form novalidate [formGroup]=\\\"assigneeForm\\\">\\r\\n                    <ion-item class=\\\"ion-no-padding no-border\\\" lines=\\\"none\\\">\\r\\n                        <app-user-selector placeholder=\\\"assign\\\" [assignees]=\\\"listOfAssignees\\\"\\r\\n                                           formControlName=\\\"assignto\\\"></app-user-selector>\\r\\n                    </ion-item>\\r\\n                </form>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid> -->\\r\\n</ion-content>\\r\\n<ion-footer *ngIf=\\\"((user.role.type=='clientadmin' || user.role.type=='bd')&& survey && survey.status=='created')||(user.role.type=='clientadmin' && survey && survey.status=='surveyassigned')\\\" class=\\\"ion-no-border white-bg\\\">\\r\\n    <ion-grid>\\r\\n        <ion-row class=\\\"ion-text-end ion-align-items-end ion-justify-content-end\\\">\\r\\n            <ion-col class=\\\"ion-no-margin ion-no-padding\\\">\\r\\n                <!--  <ion-col class=\\\"ion-no-margin ion-no-padding ion-text-end\\\" *ngIf=\\\"today==item.date\\\"> -->\\r\\n                     <ion-button class=\\\"ion-no-margin ion-no-padding\\\" style=\\\"float: right;margin-right: 10%;\\r\\n                     margin-bottom: 5%;\\\" fill=\\\"clear\\\"  (click)=\\\"assignedTo(survey)\\\">\\r\\n                     Start Survey\\r\\n                 </ion-button>\\r\\n                 </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n</ion-footer>\\r\\n<ion-footer *ngIf=\\\"(user.role.type=='qcinspector'&& survey && survey.status=='reviewassigned')||(survey && survey.status=='reviewassigned' && survey.reviewassignedto.id==user.id)\\\" class=\\\"ion-no-border white-bg\\\">\\r\\n    <ion-grid>\\r\\n        <ion-row class=\\\"ion-text-end ion-align-items-end ion-justify-content-end\\\">\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n                <ion-button class=\\\"action-button-color\\\" fill=\\\"clear\\\" style=\\\"float: left;\\\" (click)=\\\"openreviewPassed('fail')\\\">Failed</ion-button>\\r\\n                <ion-button class=\\\"action-button-color\\\" fill=\\\"clear\\\" style=\\\"float: right ;\\\" (click)=\\\"openreviewPassed('pass')\\\">Passed</ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n</ion-footer>\\r\\n\\r\\n<!-- <ion-footer *ngIf=\\\"!assigned && survey\\\" class=\\\"ion-no-border white-bg\\\">\\r\\n    <ion-grid>\\r\\n        <ion-row class=\\\"ion-text-end ion-align-items-end ion-justify-content-end\\\">\\r\\n            <ion-col size=\\\"auto\\\">\\r\\n                <ion-button class=\\\"action-button-color\\\" fill=\\\"clear\\\" (click)=\\\"updateAssignee()\\\">Done</ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n</ion-footer> -->\\r\\n\\r\\n<!-- <ion-bottom-drawer [(state)]=\\\"drawerState\\\" minimumHeight=\\\"0\\\" dockedHeight=\\\"300\\\" draggable=\\\"false\\\" disableDrag=\\\"true\\\"\\r\\n                   shouldBounce=\\\"false\\\" distanceTop=\\\"0\\\" class=\\\"drawer\\\">\\r\\n    <form [formGroup]=\\\"rescheduleForm\\\">\\r\\n        <ion-grid class=\\\"drawer\\\">\\r\\n            <ion-row>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                    <span>date and time</span>\\r\\n                </ion-col>\\r\\n                <ion-col *ngIf=\\\"survey\\\" size=\\\"auto\\\">\\r\\n                    <ion-item lines=\\\"none\\\" class=\\\"date-picker\\\" (click)=\\\"changeDate()\\\">\\r\\n                        {{date | date: 'dd MMM'}}\\r\\n                    </ion-item>\\r\\n                </ion-col>\\r\\n                <ion-col *ngIf=\\\"survey\\\" size=\\\"auto\\\">\\r\\n                    <ion-item lines=\\\"none\\\" class=\\\"date-picker\\\" (click)=\\\"changeTime()\\\">\\r\\n                        {{date | date: 'hh:mm a'}}\\r\\n                    </ion-item>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                    <span>comments</span>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                    <ion-textarea class=\\\"ion-no-margin ion-no-padding comment_box\\\" formControlName=\\\"comments\\\"\\r\\n                                  rows=\\\"3\\\"></ion-textarea>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n                <ion-col size=\\\"auto\\\">\\r\\n                    <ion-button class=\\\"buttom-drawer-button\\\" (click)=\\\"rescheduleSurvey()\\\">\\r\\n                        Confirm\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"auto\\\">\\r\\n                    <ion-button class=\\\"buttom-drawer-button-cancel\\\" fill=\\\"clear\\\" (click)=\\\"dismissBottomSheet()\\\">\\r\\n                        Cancel\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </ion-grid>\\r\\n    </form>\\r\\n</ion-bottom-drawer> -->\\r\\n\\r\\n\\r\\n\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NavParams } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-modal-page',\r\n  templateUrl: './modal-page.component.html',\r\n  styleUrls: ['./modal-page.component.scss'],\r\n})\r\nexport class ModalPageComponent implements OnInit {\r\n  @Input() image_url:any;\r\n\r\n\r\n\r\n  constructor(private navParam:NavParams) { }\r\n\r\n  ngOnInit() {\r\n\r\n    let image = this.navParam.get('image_url');\r\n    console.log(image);\r\n    \r\n  }\r\n\r\n}\r\n","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar PhotoViewer = /** @class */ (function (_super) {\n    __extends(PhotoViewer, _super);\n    function PhotoViewer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PhotoViewer.prototype.show = function (url, title, options) { return cordova(this, \"show\", { \"sync\": true }, arguments); };\n    PhotoViewer.pluginName = \"PhotoViewer\";\n    PhotoViewer.plugin = \"com-sarriaroman-photoviewer\";\n    PhotoViewer.pluginRef = \"PhotoViewer\";\n    PhotoViewer.repo = \"https://github.com/sarriaroman/photoviewer\";\n    PhotoViewer.platforms = [\"Android\", \"iOS\"];\nPhotoViewer.ɵfac = function PhotoViewer_Factory(t) { return ɵPhotoViewer_BaseFactory(t || PhotoViewer); };\nPhotoViewer.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PhotoViewer, factory: function (t) { return PhotoViewer.ɵfac(t); } });\nvar ɵPhotoViewer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(PhotoViewer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PhotoViewer, [{\n        type: Injectable\n    }], null, null); })();\n    return PhotoViewer;\n}(IonicNativePlugin));\nexport { PhotoViewer };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvcGhvdG8tdmlld2VyL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztBQUN4RTtBQUdRLElBb0R5QiwrQkFBaUI7QUFBQztBQUU5QjtBQUVSO0FBQU0sSUFJakIsMEJBQUksYUFBQyxHQUFXLEVBQUUsS0FBYyxFQUFFLE9BQTRCO0FBRVg7QUFBNEM7QUFBd0Q7QUFBMkM7QUFBcUU7K0NBWHhRLFVBQVU7Ozs7OzBCQUNMO0FBQUMsc0JBekRQO0FBQUUsRUF5RCtCLGlCQUFpQjtBQUNqRCxTQURZLFdBQVc7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBob3RvVmlld2VyT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBTZXQgdG8gZmFsc2UgdG8gZGlzYWJsZSB0aGUgc2hhcmUgYnV0dG9uIChBbmRyb2lkIG9ubHkpLiBEZWZhdWx0OiB0cnVlXG4gICAqL1xuICBzaGFyZT86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBBZGQgSFRUUCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0LiAgVXNlZnVsIGZvciBhdXRoZW50aWNhdGVkIHBhZ2VzLlxuICAgKiBUaGUgdmFsdWUgaXMgYSBzdHJpbmcgaW4gYSBKU09OIGZvcm1hdC4gIERlZmF1bHQ6ICcnXG4gICAqL1xuICBoZWFkZXJzPzogc3RyaW5nO1xuICAvKipcbiAgICogT3B0aW9uIGZvciBjbG9zZSBidXR0b24gdmlzaWJpbGl0eSB3aGVuIHNoYXJlIGZhbHNlIFtPTkxZIEZPUiBpT1NdXG4gICAqL1xuICBjbG9zZUJ1dHRvbj86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBJZiB5b3UgbmVlZCB0byBjb3B5IGltYWdlIHRvIHJlZmVyZW5jZSBiZWZvcmUgc2hvdyB0aGVuIHNldCBpdCB0cnVlIFtPTkxZIEZPUiBpT1NdXG4gICAqL1xuICBjb3B5VG9SZWZlcmVuY2U/OiBib29sZWFuO1xuICAvKipcbiAgICogRW5hYmxlIG9yIERpc2FibGUgUGljYXNzbyBPcHRpb25zICggT25seSBBbmRyb2lkICk6IGZpdCwgY2VudGVySW5zaWRlLCBjZW50ZXJDcm9wLlxuICAgKi9cbiAgcGljY2Fzb09wdGlvbnM/OiB7XG4gICAgZml0PzogYm9vbGVhbjtcbiAgICBjZW50ZXJJbnNpZGU/OiBib29sZWFuO1xuICAgIGNlbnRlckNyb3A/OiBib29sZWFuO1xuICB9O1xufVxuXG4vKipcbiAqIEBuYW1lIFBob3RvIFZpZXdlclxuICogQGRlc2NyaXB0aW9uIFRoaXMgcGx1Z2luIGNhbiBkaXNwbGF5IHlvdXIgaW1hZ2UgaW4gZnVsbCBzY3JlZW4gd2l0aCB0aGUgYWJpbGl0eSB0byBwYW4sIHpvb20sIGFuZCBzaGFyZSB0aGUgaW1hZ2UuXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IFBob3RvVmlld2VyIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9waG90by12aWV3ZXIvbmd4JztcbiAqXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHBob3RvVmlld2VyOiBQaG90b1ZpZXdlcikgeyB9XG4gKlxuICogLi4uXG4gKlxuICogdGhpcy5waG90b1ZpZXdlci5zaG93KCdodHRwczovL215c2l0ZS5jb20vcGF0aC90by9pbWFnZS5qcGcnKTtcbiAqXG4gKiB0aGlzLnBob3RvVmlld2VyLnNob3coJ2h0dHBzOi8vbXlzaXRlLmNvbS9wYXRoL3RvL2ltYWdlLmpwZycsICdNeSBpbWFnZSB0aXRsZScsIHtzaGFyZTogZmFsc2V9KTtcbiAqXG4gKiB0aGlzLnBob3RvVmlld2VyLnNob3coJ2h0dHBzOi8vbXlzZWN1cmVzaXRlLmNvbS9wYXRoL3RvL2ltYWdlLmpwZycsICdNeSBpbWFnZSB0aXRsZScsIHtzaGFyZTogZmFsc2UsIGhlYWRlcnM6ICd7dXNlcm5hbWU6Zm9vLHBhc3N3b3JkOmJhcn0nfSk7XG4gKiBgYGBcbiAqL1xuQFBsdWdpbih7XG4gIHBsdWdpbk5hbWU6ICdQaG90b1ZpZXdlcicsXG4gIHBsdWdpbjogJ2NvbS1zYXJyaWFyb21hbi1waG90b3ZpZXdlcicsXG4gIHBsdWdpblJlZjogJ1Bob3RvVmlld2VyJyxcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zYXJyaWFyb21hbi9waG90b3ZpZXdlcicsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxufSlcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQaG90b1ZpZXdlciBleHRlbmRzIElvbmljTmF0aXZlUGx1Z2luIHtcbiAgLyoqXG4gICAqIFNob3dzIGFuIGltYWdlIGluIGZ1bGwgc2NyZWVuXG4gICAqIEBwYXJhbSB1cmwge3N0cmluZ30gVVJMIG9yIHBhdGggdG8gaW1hZ2VcbiAgICogQHBhcmFtIHRpdGxlIHtzdHJpbmd9XG4gICAqIEBwYXJhbSBvcHRpb25zIHtQaG90b1ZpZXdlck9wdGlvbnN9XG4gICAqL1xuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcbiAgc2hvdyh1cmw6IHN0cmluZywgdGl0bGU/OiBzdHJpbmcsIG9wdGlvbnM/OiBQaG90b1ZpZXdlck9wdGlvbnMpOiB2b2lkIHt9XG59XG4iXX0=","export default \".survey-email {\\n  font-size: 0.8em;\\n}\\n\\n.survey-name {\\n  font-size: 1.7em;\\n}\\n\\n.survey-phone {\\n  font-size: 0.8em;\\n}\\n\\nion-header {\\n  color: #666666;\\n}\\n\\n.image-count {\\n  width: 48px;\\n  height: 48px;\\n}\\n\\n.data-header {\\n  font-size: 0.9em;\\n  color: #BFBFBF;\\n}\\n\\n.data-point {\\n  font-size: 1em;\\n  color: black;\\n}\\n\\n.address {\\n  color: #3a7be0;\\n}\\n\\n.comment-by {\\n  font-size: 10px;\\n  font-style: italic;\\n  color: #666666 !important;\\n}\\n\\n.main-background {\\n  background: #EFEFEF;\\n  border-radius: 0.5em;\\n  color: #656565;\\n}\\n\\n.date-background {\\n  width: 4em;\\n  height: 4em;\\n  background: #3c78d8;\\n  border-radius: 0.5em;\\n  color: white;\\n}\\n\\n.month {\\n  font-size: 1em;\\n}\\n\\n.day {\\n  font-size: 1.5em;\\n  font-weight: bold;\\n}\\n\\n.time {\\n  font-size: 1.5em;\\n  font-weight: bold;\\n}\\n\\n.reschedule-icon {\\n  width: 48px;\\n  height: 48px;\\n}\\n\\n.assignee-image {\\n  width: 3.5em;\\n  height: 3.5em;\\n  border-radius: 50%;\\n  object-fit: fill;\\n  border: 2px solid white;\\n  padding: 8px;\\n  text-align: center;\\n  background: #FFF1CF;\\n}\\n\\n.assignee-margin {\\n  margin: 8px;\\n}\\n\\n.selected {\\n  border: 3px solid #3c78d8;\\n  border-radius: 50%;\\n}\\n\\n.normal {\\n  border: 3px solid white;\\n}\\n\\ndiv[scrollx=true], div[scrolly=true] {\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\ndiv[scrollx=true] ::-webkit-scrollbar, div[scrolly=true] ::-webkit-scrollbar {\\n  display: none;\\n}\\n\\ndiv[scrollx=true] {\\n  overflow-x: auto;\\n}\\n\\ndiv[scrolly=true] {\\n  overflow-y: auto;\\n}\\n\\n.date-picker {\\n  --background: #E1E1E1;\\n  --border: 2px solid #666666;\\n}\\n\\n.picker-button {\\n  --background: #3c78d8;\\n  --color: white;\\n}\\n\\n.name_div {\\n  font-size: 20px;\\n}\\n\\n.page-text-color {\\n  color: #666666 !important;\\n}\\n\\n.segments {\\n  height: 40px;\\n}\\n\\nion-segment-button {\\n  width: calc(100% / 4);\\n}\\n\\nion-segment-button ion-label {\\n  max-width: calc(90vw / 4);\\n}\\n\\n.bkg {\\n  color: #666;\\n  background-color: #f9f9f9;\\n}\\n\\nion-slides {\\n  height: 100%;\\n}\\n\\n.position-fix {\\n  position: absolute;\\n  z-index: 999;\\n  transform: translateY(-1000%);\\n}\\n\\n.segment-btn {\\n  background: blue !important;\\n  color: #fff !important;\\n}\\n\\n.wd140 {\\n  min-width: auto;\\n  max-width: 100%;\\n  width: auto !important;\\n  color: #fff;\\n}\\n\\n.wd140 ion-label {\\n  width: auto !important;\\n  max-width: 100%;\\n}\\n\\n.colorwht {\\n  color: #111 !important;\\n  background: #fff !important;\\n}\\n\\nmain inner-scroll scroll-y {\\n  padding: 0px !important;\\n}\\n\\nion-slides {\\n  padding: 0px !important;\\n}\\n\\nion-content main {\\n  padding: 0px !important;\\n}\\n\\nbutton {\\n  background: blue !important;\\n}\\n\\n.hgt-margin {\\n  height: 39px;\\n  margin-top: 10px;\\n}\\n\\nion-grid {\\n  padding: 0px !important;\\n}\\n\\nion-content main {\\n  padding: 0px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHN1cnZleS1kZXRhaWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsY0FBQTtBQUNGOztBQUVBO0VBQ0UsVUFBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtFQUNBLG9CQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxpQkFBQTtBQUNGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLHVCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLHlCQUFBO0VBQ0Esa0JBQUE7QUFDRjs7QUFFQTtFQUNFLHVCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0FBQ0Y7O0FBQ0U7RUFDRSxhQUFBO0FBQ0o7O0FBR0E7RUFDRSxnQkFBQTtBQUFGOztBQUdBO0VBQ0UsZ0JBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0VBQ0EsMkJBQUE7QUFBRjs7QUFHQTtFQUNHLHFCQUFBO0VBQ0EsY0FBQTtBQUFIOztBQUdBO0VBQ0UsZUFBQTtBQUFGOztBQUdBO0VBQ0UseUJBQUE7QUFBRjs7QUFHQTtFQUNFLFlBQUE7QUFBRjs7QUFHQTtFQUNFLHFCQUFBO0FBQUY7O0FBRUU7RUFDSSx5QkFBQTtBQUFOOztBQUtBO0VBQ0UsV0FBQTtFQUNBLHlCQUFBO0FBRkY7O0FBSUE7RUFDRSxZQUFBO0FBREY7O0FBSUE7RUFDRSxrQkFBQTtFQUNBLFlBQUE7RUFDQSw2QkFBQTtBQURGOztBQUlBO0VBQ0EsMkJBQUE7RUFDQSxzQkFBQTtBQURBOztBQUdBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFBZ0Isc0JBQUE7RUFDaEIsV0FBQTtBQUNBOztBQUNBO0VBQWlCLHNCQUFBO0VBQXVCLGVBQUE7QUFJeEM7O0FBRkE7RUFDRSxzQkFBQTtFQUNBLDJCQUFBO0FBS0Y7O0FBRkE7RUFDQSx1QkFBQTtBQUtBOztBQUhBO0VBQ0UsdUJBQUE7QUFNRjs7QUFGRTtFQUNFLHVCQUFBO0FBS0o7O0FBREE7RUFDRSwyQkFBQTtBQUlGOztBQURBO0VBQ0UsWUFBQTtFQUNBLGdCQUFBO0FBSUY7O0FBRkE7RUFDRSx1QkFBQTtBQUtGOztBQUZFO0VBQ0UsdUJBQUE7QUFLSiIsImZpbGUiOiJzdXJ2ZXktZGV0YWlsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdXJ2ZXktZW1haWwge1xyXG4gIGZvbnQtc2l6ZTogMC44ZW07XHJcbn1cclxuXHJcbi5zdXJ2ZXktbmFtZSB7XHJcbiAgZm9udC1zaXplOiAxLjdlbTtcclxufVxyXG5cclxuLnN1cnZleS1waG9uZSB7XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxufVxyXG5cclxuaW9uLWhlYWRlciB7XHJcbiAgY29sb3I6ICM2NjY2NjY7XHJcbn1cclxuXHJcbi5pbWFnZS1jb3VudCB7XHJcbiAgd2lkdGg6IDQ4cHg7XHJcbiAgaGVpZ2h0OiA0OHB4O1xyXG59XHJcblxyXG4uZGF0YS1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogMC45ZW07XHJcbiAgY29sb3I6ICNCRkJGQkY7XHJcbn1cclxuXHJcbi5kYXRhLXBvaW50IHtcclxuICBmb250LXNpemU6IDFlbTtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5hZGRyZXNzIHtcclxuICBjb2xvcjogIzNhN2JlMDtcclxufVxyXG5cclxuLmNvbW1lbnQtYnkge1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgY29sb3I6ICM2NjY2NjYgIWltcG9ydGFudDtcclxufVxyXG5cclxuLm1haW4tYmFja2dyb3VuZCB7XHJcbiAgYmFja2dyb3VuZDogI0VGRUZFRjtcclxuICBib3JkZXItcmFkaXVzOiAwLjVlbTtcclxuICBjb2xvcjogIzY1NjU2NTtcclxufVxyXG5cclxuLmRhdGUtYmFja2dyb3VuZCB7XHJcbiAgd2lkdGg6IDRlbTtcclxuICBoZWlnaHQ6IDRlbTtcclxuICBiYWNrZ3JvdW5kOiAjM2M3OGQ4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDAuNWVtO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLm1vbnRoIHtcclxuICBmb250LXNpemU6IDFlbTtcclxufVxyXG5cclxuLmRheSB7XHJcbiAgZm9udC1zaXplOiAxLjVlbTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLnRpbWUge1xyXG4gIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5yZXNjaGVkdWxlLWljb24ge1xyXG4gIHdpZHRoOiA0OHB4O1xyXG4gIGhlaWdodDogNDhweDtcclxufVxyXG5cclxuLmFzc2lnbmVlLWltYWdlIHtcclxuICB3aWR0aDogMy41ZW07XHJcbiAgaGVpZ2h0OiAzLjVlbTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgb2JqZWN0LWZpdDogZmlsbDtcclxuICBib3JkZXI6IDJweCBzb2xpZCB3aGl0ZTtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQ6ICNGRkYxQ0Y7XHJcbn1cclxuXHJcbi5hc3NpZ25lZS1tYXJnaW4ge1xyXG4gIG1hcmdpbjogOHB4O1xyXG59XHJcblxyXG4uc2VsZWN0ZWQge1xyXG4gIGJvcmRlcjogM3B4IHNvbGlkICMzYzc4ZDg7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcblxyXG4ubm9ybWFsIHtcclxuICBib3JkZXI6IDNweCBzb2xpZCB3aGl0ZTtcclxufVxyXG5cclxuZGl2W3Njcm9sbHg9dHJ1ZV0sIGRpdltzY3JvbGx5PXRydWVdIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgOjotd2Via2l0LXNjcm9sbGJhciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxufVxyXG5cclxuZGl2W3Njcm9sbHg9dHJ1ZV0ge1xyXG4gIG92ZXJmbG93LXg6IGF1dG87XHJcbn1cclxuXHJcbmRpdltzY3JvbGx5PXRydWVdIHtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG59XHJcblxyXG4uZGF0ZS1waWNrZXIge1xyXG4gIC0tYmFja2dyb3VuZDogI0UxRTFFMTtcclxuICAtLWJvcmRlcjogMnB4IHNvbGlkICM2NjY2NjY7XHJcbn1cclxuXHJcbi5waWNrZXItYnV0dG9uIHtcclxuICAgLS1iYWNrZ3JvdW5kOiAjM2M3OGQ4O1xyXG4gICAtLWNvbG9yOiB3aGl0ZTtcclxuIH1cclxuXHJcbi5uYW1lX2RpdntcclxuICBmb250LXNpemU6IDIwcHg7XHJcbn1cclxuXHJcbi5wYWdlLXRleHQtY29sb3Ige1xyXG4gIGNvbG9yOiAjNjY2NjY2ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5zZWdtZW50c3tcclxuICBoZWlnaHQ6NDBweDtcclxufVxyXG5cclxuaW9uLXNlZ21lbnQtYnV0dG9uIHtcclxuICB3aWR0aDogY2FsYygxMDAlIC8gNCk7XHJcblxyXG4gIGlvbi1sYWJlbCB7XHJcbiAgICAgIG1heC13aWR0aDogY2FsYyg5MHZ3IC8gNCk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLmJrZ3tcclxuICBjb2xvcjogIzY2NjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG59XHJcbmlvbi1zbGlkZXMge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnBvc2l0aW9uLWZpeHtcclxuICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICB6LWluZGV4Ojk5OTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEwMDAlKTtcclxufVxyXG5cclxuLnNlZ21lbnQtYnRue1xyXG5iYWNrZ3JvdW5kOiBibHVlICFpbXBvcnRhbnQ7XHJcbmNvbG9yOiNmZmYgIWltcG9ydGFudDtcclxufVxyXG4ud2QxNDB7XHJcbm1pbi13aWR0aDogYXV0bztcclxubWF4LXdpZHRoOiAxMDAlO3dpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XHJcbmNvbG9yOiNmZmY7XHJcbn1cclxuLndkMTQwIGlvbi1sYWJlbHt3aWR0aDogYXV0byAhaW1wb3J0YW50O21heC13aWR0aDogMTAwJTt9XHJcblxyXG4uY29sb3J3aHR7XHJcbiAgY29sb3I6IzExMSAhaW1wb3J0YW50O1xyXG4gIGJhY2tncm91bmQ6ICNmZmYgIWltcG9ydGFudDtcclxufVxyXG5cclxubWFpbiBpbm5lci1zY3JvbGwgc2Nyb2xsLXl7XHJcbnBhZGRpbmc6MHB4ICFpbXBvcnRhbnQ7fVxyXG5cclxuaW9uLXNsaWRlc3tcclxuICBwYWRkaW5nOjBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5pb24tY29udGVudHtcclxuICBtYWlue1xyXG4gICAgcGFkZGluZzowcHggIWltcG9ydGFudDtcclxuICB9XHJcbn1cclxuXHJcbmJ1dHRvbntcclxuICBiYWNrZ3JvdW5kOiBibHVlICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5oZ3QtbWFyZ2lue1xyXG4gIGhlaWdodDogMzlweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbmlvbi1ncmlke1xyXG4gIHBhZGRpbmc6MHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuaW9uLWNvbnRlbnR7XHJcbiAgbWFpbntcclxuICAgIHBhZGRpbmc6MHB4ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4iXX0= */\";","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { UtilitiesService } from '../utilities.service';\r\nimport { ApiService } from '../api.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertController, NavController, ToastController, ModalController } from '@ionic/angular';\r\nimport { SurveyDataModel } from '../model/survey.model';\r\nimport { UserRoles } from '../model/constants';\r\nimport { AssigneeModel } from '../model/assignee.model';\r\nimport { StorageService } from '../storage.service';\r\nimport { DrawerState } from 'ion-bottom-drawer';\r\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ErrorModel } from '../model/error.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { LaunchNavigatorOptions, LaunchNavigator } from '@ionic-native/launch-navigator/ngx';\r\nimport { ROLES } from '../contants';\r\nimport { ModalPageComponent } from './modal-page/modal-page.component';\r\nimport { User } from '../model/user.model';\r\nimport { PhotoViewer } from '@ionic-native/photo-viewer/ngx';\r\n\r\n@Component({\r\n  selector: 'app-survey-detail',\r\n  templateUrl: './survey-detail.page.html',\r\n  styleUrls: ['./survey-detail.page.scss'],\r\n})\r\nexport class SurveyDetailPage implements OnInit, OnDestroy {\r\n\r\n  slideOpts = {\r\n    initialSlide: 1,\r\n    speed: 400\r\n  };\r\n\r\n  surveyId: number;\r\n  survey: SurveyDataModel;\r\n  listOfAssignees: AssigneeModel[] = [];\r\n  drawerState = DrawerState.Bottom;\r\n  date: Date;\r\n  user:User;\r\n  reviewcomments:any\r\n  rescheduleForm: FormGroup;\r\n  assigned = false;\r\n  assigneeForm: FormGroup;\r\n  dataSubscription: Subscription;\r\n  refreshDataOnPreviousPage = 0;\r\n  segments:any='SiteDetils';\r\n  electricals:any='MSB';\r\n\r\n  reviewenddatetime:number;\r\n\r\n  options: LaunchNavigatorOptions = {\r\n    start: '',\r\n    app: this.launchNavigator.APP.GOOGLE_MAPS\r\n  };\r\n\r\n  iseditable = true;\r\n\r\n  constructor(\r\n    public utilities: UtilitiesService,\r\n    private apiService: ApiService,\r\n    private route: ActivatedRoute,\r\n    private navController: NavController,\r\n    private alertController: AlertController,\r\n    private storage: StorageService,\r\n    private datePicker: DatePicker,\r\n    private formBuilder: FormBuilder,\r\n    private launchNavigator: LaunchNavigator,\r\n    private toastController: ToastController,\r\n    private modalController:ModalController,\r\n    private photoViewer: PhotoViewer,\r\n    private router:Router\r\n  ) {\r\n    this.surveyId = +this.route.snapshot.paramMap.get('id');\r\n    this.rescheduleForm = this.formBuilder.group({\r\n      datetime: new FormControl('', [Validators.required]),\r\n      comments: new FormControl('', [Validators.required])\r\n    });\r\n    this.assigneeForm = this.formBuilder.group({\r\n      assignedto: new FormControl('', [Validators.required])\r\n    });\r\n\r\n    if (this.storage.getUser().role.id == ROLES.Surveyor) {\r\n      this.iseditable = false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.user=this.storage.getUser();\r\n    console.log(this.user);\r\n    this.dataSubscription = this.utilities.getSurveyDetailsRefresh().subscribe((result) => {\r\n      this.refreshDataOnPreviousPage++;\r\n      this.getSurveyDetails();\r\n      this.getAssignees();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataSubscription.unsubscribe();\r\n    if (this.refreshDataOnPreviousPage > 1) {\r\n      this.utilities.sethomepageSurveyRefresh(true);\r\n    }\r\n  }\r\n\r\n  getSurveyDetails() {\r\n    this.utilities.showLoading('Getting Survey Details').then((success) => {\r\n      this.apiService.getSurveyDetail(this.surveyId).subscribe((result) => {\r\n        this.utilities.hideLoading().then(() => {\r\n          this.setData(result);\r\n          console.log(\">>>\",result);\r\n          \r\n        });\r\n      }, (error) => {\r\n        this.utilities.hideLoading();\r\n      });\r\n    });\r\n  }\r\n\r\n  setData(result: SurveyDataModel) {\r\n    console.log(result);\r\n    this.survey = result;\r\n    if (this.survey.acdisconnect) {\r\n      if (this.survey.acdisconnect === 'true') {\r\n        this.survey.acdisconnect = 'yes';\r\n      } else {\r\n        this.survey.acdisconnect = 'no';\r\n      }\r\n    }\r\n    if (this.survey.pvmeter) {\r\n      if (this.survey.pvmeter === 'true') {\r\n        this.survey.pvmeter = 'yes';\r\n      } else {\r\n        this.survey.pvmeter = 'no';\r\n      }\r\n    }\r\n    this.assigned = this.survey.assignedto !== null && this.survey.assignedto !== undefined;\r\n    this.rescheduleForm.patchValue({\r\n      datetime: this.survey.datetime\r\n    });\r\n  }\r\n\r\n  chat() {\r\n\r\n  }\r\n\r\n  goBack() {\r\n    this.navController.pop();\r\n  }\r\n\r\n  getSurveyImages() {\r\n    return this.survey.mspimages.length\r\n      + this.survey.utilitymeterimages.length\r\n      + this.survey.pvinverterimages.length\r\n      + this.survey.pvmeterimages.length\r\n      + this.survey.roofimages.length\r\n      + this.survey.acdisconnectimages.length\r\n      + this.survey.existingsubpanelimages.length\r\n      + this.survey.appliancesimages.length\r\n      + this.survey.atticimages.length\r\n      + this.survey.roofdimensionimages.length\r\n      + this.survey.obstaclesimages.length\r\n      + this.survey.obstaclesdimensionsimages.length;\r\n  }\r\n\r\n  async deleteSurvey() {\r\n    const toast = await this.toastController.create({\r\n      header: 'Delete Survey',\r\n      message: 'Are you sure you want to delete this survey?',\r\n      cssClass: 'my-custom-class',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          handler: () => {\r\n            this.deleteSurveyFromServer();\r\n          }\r\n        }, {\r\n          text: 'No'\r\n        }\r\n      ]\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  assignedTo(surveyData){\r\n\r\n    let postData = {\r\n      assignedto: this.user.id,\r\n      status: \"surveyinprocess\"\r\n    };\r\n    this.apiService.updateSurveyForm(postData,surveyData.id).subscribe(res=>{\r\n      console.log(res);\r\n    })\r\n    this.router.navigate(['/camera/' + surveyData.id + '/' + surveyData.jobtype + '/' + surveyData.city + '/' + surveyData.state + '/' + surveyData.latitude + '/' + surveyData.longitude]);\r\n\r\n \r\n  }\r\n\r\n\r\n  deleteSurveyFromServer() {\r\n    this.utilities.showLoading('Deleting Survey').then((success) => {\r\n      this.apiService.deleteSurvey(this.surveyId).subscribe((result) => {\r\n        this.utilities.hideLoading().then(()=>{\r\n          this.utilities.showSnackBar('Survey deleted successfully');\r\n          this.navController.pop();\r\n          this.utilities.sethomepageSurveyRefresh(true);\r\n        });\r\n      }, (error) => {\r\n        this.utilities.hideLoading().then(() => {\r\n          this.utilities.errorSnackBar('Some Error Occurred');\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  getAssignees() {\r\n    this.apiService.getSurveyors().subscribe(assignees => {\r\n      this.listOfAssignees = [];\r\n      assignees.forEach(item => this.listOfAssignees.push(item));\r\n      console.log(this.listOfAssignees);\r\n    });\r\n  }\r\n\r\n  reschedule() {\r\n    this.drawerState = DrawerState.Docked;\r\n    this.date = this.survey.datetime;\r\n  }\r\n\r\n  changeDate() {\r\n    const currentDate = new Date(this.date);\r\n    console.log(currentDate);\r\n    this.datePicker.show({\r\n      date: new Date(this.date),\r\n      minDate: new Date(),\r\n      mode: 'date',\r\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\r\n    }).then(\r\n      date => {\r\n        this.date = date;\r\n        this.rescheduleForm.patchValue({\r\n          datetime: this.date.getTime()\r\n        });\r\n      },\r\n      err => console.log('Error occurred while getting date: ', err)\r\n    );\r\n  }\r\n\r\n  changeTime() {\r\n    const currentDate = new Date(this.date);\r\n    console.log(currentDate);\r\n    this.datePicker.show({\r\n      date: new Date(this.date),\r\n      mode: 'time',\r\n      minDate: new Date(),\r\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_DEVICE_DEFAULT_LIGHT\r\n    }).then(\r\n      date => {\r\n        const oldDate = new Date(this.date);\r\n        oldDate.setHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n        this.date = oldDate;\r\n        this.rescheduleForm.patchValue({\r\n          datetime: this.date.getTime()\r\n        });\r\n      },\r\n      err => console.log('Error occurred while getting date: ', err)\r\n    );\r\n  }\r\n\r\n  rescheduleSurvey() {\r\n    if (this.rescheduleForm.status === 'INVALID') {\r\n      this.utilities.errorSnackBar('Invalid Data');\r\n    } else {\r\n      this.utilities.showLoading('Updating').then(() => {\r\n        this.apiService.updateSurveyForm(this.rescheduleForm.value, this.surveyId).subscribe(response => {\r\n          this.utilities.hideLoading().then(() => {\r\n            this.survey = response;\r\n            this.drawerState = DrawerState.Bottom;\r\n          });\r\n        }, responseError => {\r\n          this.utilities.hideLoading().then(() => {\r\n            const error: ErrorModel = responseError.error;\r\n            if (error.message instanceof String) {\r\n              this.utilities.errorSnackBar(error.message);\r\n            } else if (error.message instanceof Array) {\r\n              this.utilities.errorSnackBar(error.message[0].messages[0].message);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  dismissBottomSheet() {\r\n    this.drawerState = DrawerState.Bottom;\r\n  }\r\n\r\n  updateAssignee() {\r\n    if (this.assigneeForm.status === 'INVALID') {\r\n      this.utilities.errorSnackBar('Please select an assignee');\r\n    } else {\r\n      this.utilities.showLoading('Updating').then(() => {\r\n        this.apiService.updateSurveyForm(this.assigneeForm.value, this.surveyId).subscribe((success) => {\r\n          this.utilities.hideLoading().then(() => {\r\n            this.utilities.showSnackBar('Assignee selected');\r\n            this.setData(success);\r\n            this.refreshDataOnPreviousPage++;\r\n          });\r\n        }, (error) => {\r\n          this.utilities.hideLoading().then(() => {\r\n            this.utilities.errorSnackBar('Some Error Occurred');\r\n          });\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  openAddressOnMap(address: string) {\r\n    this.launchNavigator.navigate(address, this.options);\r\n  }\r\n\r\n  async openModal(image){\r\n    console.log(image)\r\n\r\n    const modal = await this.modalController.create({\r\n      component: ModalPageComponent,\r\n      showBackdrop:true,\r\n      backdropDismiss: true,\r\n      componentProps: {\r\n        image_url : image,\r\n      },\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  reportDesignReviewFailure(){\r\n    console.log(\"fail\");\r\n    //console.log(\"Value is\" + this.reviewIssuesForm.value);\r\n        let cdate = Date.now();\r\n        this.reviewenddatetime = cdate;\r\n       const postData = {\r\n        status: \"reviewfailed\",\r\n       reviewissues : this.reviewcomments,\r\n        reviewendtime : this.reviewenddatetime,\r\n        \r\n      };\r\n\r\n    \r\n      //console.log(\"this is\" + this.survey.reviewstarttime);\r\n\r\n     // console.log(\"this is\"+ this.reviewstartdatetime);\r\n      this.apiService.updateSurveyForm(\r\n        postData, \r\n        this.survey.id\r\n         \r\n        )\r\n        .subscribe(\r\n          response => {\r\n            this.utilities.showSnackBar(\"Survey status has been updated successfully.\");\r\n            this.utilities.sethomepageSurveyRefresh(true);\r\n            if(this.user.role.type=='qcinspector'){\r\n              this.navController.navigateRoot(['analystoverview/survey']);}\r\n              else{\r\n                this.navController.navigateRoot(['homepage/survey']);\r\n              }\r\n            //this.data.triggerEditEvent = false;\r\n            //this.dialogRef.close(this.data);\r\n          },\r\n          error => {\r\n            this.utilities.errorSnackBar(\r\n              \r\n              \"Error\"\r\n            );\r\n          }\r\n        );\r\n    }\r\n  \r\n\r\n  reportDesignReviewSuccess(){\r\n   // this.countdownservice.stopTimer();\r\n    let cdate = Date.now();\r\n    this.reviewenddatetime = cdate;\r\n  const postData = {\r\n    status: \"reviewpassed\",\r\n    //reviewissues : this.reviewIssuesForm.get('reviewIssues').value,\r\n    //reviewstarttime : this.reviewstartdatetime,\r\n    reviewissues : this.reviewcomments,\r\n    reviewendtime : this.reviewenddatetime\r\n  };\r\n  this.apiService\r\n  .updateSurveyForm(\r\n    postData,\r\n    this.survey.id\r\n    \r\n  )\r\n  .subscribe(\r\n    response => {\r\n      this.utilities.showSnackBar(\"Survey status has been updated successfully.\");\r\n      this.utilities.sethomepageSurveyRefresh(true);\r\n      if(this.user.role.type=='qcinspector'){\r\n        this.navController.navigateRoot(['analystoverview/survey']);}\r\n        else{\r\n          this.navController.navigateRoot(['homepage/survey']);\r\n        }\r\n     // this.triggerEditEvent = false;\r\n      //this.dialogRef.close(this.data);\r\n    },\r\n    error => {\r\n      this.utilities.errorSnackBar(\r\n        \"Error\"\r\n      );\r\n    }\r\n  );\r\n​\r\n \r\n      \r\n    \r\n\r\n  }\r\n\r\n\r\n  \r\n  async openreviewPassed(value){\r\n    var checkValue = value;\r\n    console.log(checkValue)\r\n    if(checkValue == 'pass'){\r\n  const alert = await this.alertController.create({\r\n      cssClass: 'alertClass',\r\n      header: 'Confirm!',\r\n      message:'Would you like to  Add Comments!!',\r\n      inputs:\r\n       [ {name:'comment',\r\n       id:'comment',\r\n          type:'textarea',\r\n        placeholder:'Enter Comment'}\r\n        ] ,\r\n      buttons: [\r\n        {\r\n          text: 'Passed',\r\n        cssClass: 'secondary',\r\n          handler: (alertData) => {\r\n            console.log('Confirm Cancel: blah');\r\n            this.reviewcomments=alertData.comment;\r\n            this.reportDesignReviewSuccess();\r\n           // if(checkValue == 'pass'){\r\n           // this.reportDesignReviewSuccess();\r\n           // }\r\n           // else if(checkValue == 'fail')\r\n           // {\r\n           //   if(this.reviewcomments !== \"\")\r\n              // {\r\n              // this.reportDesignReviewFailure();\r\n              // }\r\n              // else{\r\n              //   this.utilities.errorSnackBar(\"Please Enter Issues\");\r\n              // }\r\n            }\r\n          }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n  else if(checkValue == 'fail'){\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'alertClass',\r\n      header: 'Confirm!',\r\n      message:'Would you like to  Add Comments!!',\r\n      inputs:\r\n       [ {name:'comment',\r\n       id:'comment',\r\n          type:'textarea',\r\n        placeholder:'Enter Comment'}\r\n        ] ,\r\n      buttons: [\r\n        {\r\n          text: 'Failed',\r\n        cssClass: 'secondary',\r\n          handler: (alertData) => {\r\n            console.log('Confirm Cancel: blah');\r\n            this.reviewcomments=alertData.comment;\r\n            if(this.reviewcomments !== \"\"){\r\n            this.reportDesignReviewFailure();\r\n            }\r\n            else{\r\n              this.utilities.errorSnackBar(\"Please Enter Issues\");\r\n            }\r\n            // if(checkValue == 'pass'){\r\n            // this.reportDesignReviewSuccess();\r\n            // }\r\n            // else if(checkValue == 'fail')\r\n            // {\r\n            //   if(this.reviewcomments !== \"\")\r\n            //   {\r\n            //   this.reportDesignReviewFailure();\r\n            //   }\r\n            //   else{\r\n            //     this.utilities.errorSnackBar(\"Please Enter Issues\");\r\n            //   }\r\n            // }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n  }\r\n\r\n    \r\nshowimage(url){\r\n  this.photoViewer.show(url);\r\n}\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n","export default \".modal-wrapper.sc-ion-modal-ios {\\n  height: 100% !important;\\n  width: 100% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxtb2RhbC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7RUFDQSxzQkFBQTtBQUNKIiwiZmlsZSI6Im1vZGFsLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kYWwtd3JhcHBlci5zYy1pb24tbW9kYWwtaW9zIHtcclxuICAgIGhlaWdodDoxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDoxMDAlICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}