{"version":3,"sources":["./src/app/homepage/survey/survey.component.ts","./src/app/homepage/survey/survey.component.html","./src/app/homepage/survey/survey.component.scss"],"names":[],"mappings":"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","file":"default~homepage-homepage-module~surveyoroverview-surveyoroverview-module.js","sourcesContent":["import { ChangeDetectorRef, Component, OnDestroy, OnInit,ViewChild, ElementRef, Renderer2 } from '@angular/core';\r\nimport { UtilitiesService } from 'src/app/utilities.service';\r\nimport { ApiService } from 'src/app/api.service';\r\nimport { SurveyDataModel } from 'src/app/model/survey.model';\r\nimport { ErrorModel } from 'src/app/model/error.model';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { NavController, AlertController, ModalController, Platform, IonContent } from '@ionic/angular';\r\nimport { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator/ngx';\r\nimport { DrawerState } from 'ion-bottom-drawer';\r\nimport { AssigneeModel } from '../../model/assignee.model';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UserRoles } from '../../model/constants';\r\nimport { Router, NavigationEnd, ActivatedRoute,NavigationExtras } from '@angular/router';\r\nimport { COMETCHAT_CONSTANTS } from '../../contants';\r\nimport { StorageService } from 'src/app/storage.service';\r\nimport { ROLES } from 'src/app/contants';\r\nimport {Storage} from '@ionic/storage';\r\nimport { SurveyStorageModel } from 'src/app/model/survey-storage.model';\r\nimport * as moment from 'moment';\r\nimport { NetworkdetectService } from 'src/app/networkdetect.service';\r\nimport { CometChat } from '@cometchat-pro/cordova-ionic-chat';\r\nimport { EmailModelPage } from 'src/app/email-model/email-model.page';\r\nimport{SocialSharing} from '@ionic-native/social-sharing/ngx';\r\nimport { User } from 'src/app/model/user.model';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport {File } from '@ionic-native/file/ngx';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-survey',\r\n  templateUrl: './survey.component.html',\r\n  styleUrls: ['./survey.component.scss'],\r\n})\r\nexport class SurveyComponent  {\r\n\r\n  @ViewChild('content', { static: true }) content: IonContent;\r\n\r\n\r\n  listOfSurveyData: SurveyDataModel[] = [];\r\n  listOfSurveyDataHelper: SurveyDataHelper[] = [];\r\n  private surveyRefreshSubscription: Subscription;\r\n  private dataRefreshSubscription: Subscription;\r\n\r\n  today: any;\r\n\r\n  options: LaunchNavigatorOptions = {\r\n    start: '',\r\n    app: this.launchNavigator.APP.GOOGLE_MAPS\r\n  };\r\n  drawerState = DrawerState.Bottom;\r\n  surveyId = 0;\r\n  showBottomDraw: boolean = false;\r\n  surveyData: any;\r\n  selectedDesigner:any\r\n  assignForm: FormGroup;\r\n  listOfAssignees: AssigneeModel[] = [];\r\n  routeSubscription: Subscription;\r\n  filterDataArray: SurveyDataModel[];\r\n  segments:any='status=created&status=outsourced&status=requestaccepted';\r\n  overdue: number;\r\n  userData: User;\r\n  netSwitch: any;\r\n  reviewAssignedTo:any;\r\n  chatid:any\r\n\r\n  updatechat_id: boolean=false;\r\n  deactivateNetworkSwitch: Subscription;\r\n  storageDirectory: string;\r\n\r\n  constructor(\r\n    public utils: UtilitiesService,\r\n    private alertController:AlertController,\r\n    private socialsharing: SocialSharing,\r\n    public modalController: ModalController,\r\n    private apiService: ApiService,\r\n    private datePipe: DatePipe,\r\n    private navController: NavController,\r\n    private launchNavigator: LaunchNavigator,\r\n    private formBuilder: FormBuilder,\r\n    private cdr: ChangeDetectorRef,\r\n    private renderer:Renderer2,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private storage: Storage,\r\n    private storageService:StorageService,\r\n    private network:NetworkdetectService,\r\n    private platform:Platform,\r\n    private file:File,\r\n    private androidPermissions: AndroidPermissions,\r\n    private transfer: FileTransfer,\r\n    private localnotification:LocalNotifications,\r\n    private el:ElementRef\r\n  ) {\r\n    const latestDate = new Date();\r\n    this.today = datePipe.transform(latestDate, 'M/dd/yy');\r\n    console.log('date', this.today);\r\n    this.assignForm = this.formBuilder.group({\r\n      assignedto: new FormControl(0, [Validators.required]),\r\n      status: new FormControl('surveyassigned', [Validators.required])\r\n    });\r\n  }\r\n\r\n  segmentChanged(event?){\r\n    this.segments= event.target.value;\r\n    // this.getSurveys(event);\r\n\r\n    // this.surveyRefreshSubscription = this.utils.getHomepageSurveyRefresh().subscribe((result) => {\r\n      this.getSurveys(null);\r\n    // });\r\n\r\n    // this.dataRefreshSubscription = this.utils.getDataRefresh().subscribe((result) => {\r\n    //   if(this.listOfSurveyData != null && this.listOfSurveyData.length > 0){\r\n    //     this.formatSurveyData(this.listOfSurveyData);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.makeDirectory();\r\n    this.network.networkDisconnect();\r\nthis.network.networkConnect();\r\nthis.deactivateNetworkSwitch = this.network.networkSwitch.subscribe(data=>{\r\n      this.netSwitch = data;\r\n      console.log(this.netSwitch);\r\n\r\n      //  this.scrollTo();\r\n    })\r\n    // this.surveyRefreshSubscription = this.utils.getHomepageSurveyRefresh().subscribe((result) => {\r\n\r\n    //   this.getSurveys(null);\r\n    // });\r\n\r\n    // this.dataRefreshSubscription = this.utils.getDataRefresh().subscribe((result) => {\r\n    //   if(this.listOfSurveyData != null && this.listOfSurveyData.length > 0){\r\n    //     this.formatSurveyData(this.listOfSurveyData);\r\n    //   }\r\n    // });\r\n    // debugger;\r\n    // this.routeSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userData = this.storageService.getUser();\r\n    console.log(this.userData);\r\n    this.setupCometChat();\r\n\r\n    this.surveyRefreshSubscription = this.utils.getHomepageSurveyRefresh().subscribe((result) => {\r\n      this.getSurveys(null);\r\n\r\n    });\r\n  }\r\n  // ngOnInit() {\r\n  //   // this.filterData(this.filterDataArray);\r\n  //   // this.routeSubscription = this.router.events.subscribe((event) => {\r\n  //   //   if (event instanceof NavigationEnd) {\r\n  //   //     // Trick the Router into believing it's last link wasn't previously loaded\r\n  //   //     if (this.router.url.indexOf('page') > -1) {\r\n  //   //       this.router.navigated = false;\r\n  //   //       let data = this.route.queryParams.subscribe((_res: any) => {\r\n  //   //         console.log('Serach Term', _res);\r\n  //   //         if (Object.keys(_res).length !== 0) {\r\n  //   //           //  this.ApplysearchDesginAndSurvey(_res.serchTerm)\r\n\r\n  //   //           this.filterData(_res.serchTerm);\r\n  //   //         } else {\r\n  //   //           // this.refreshSubscription = this.utils.getHomepageDesignRefresh().subscribe((result) => {\r\n  //   //             // debugger;\r\n  //   //             this.getSurveys(null);\r\n  //   //           // });\r\n  //   //         }\r\n  //   //       });\r\n  //   //     }\r\n  //   //   }\r\n  //   // });\r\n  //   // console.log('inside init');\r\n  //   // this.routeSubscription = this.router.events.subscribe((event) => {\r\n  //   //   if (event instanceof NavigationEnd) {\r\n  //   //     // Trick the Router into believing it's last link wasn't previously loaded\r\n  //   //     if (this.router.url.indexOf('page') > -1) {\r\n  //   //       this.router.navigated = false;\r\n  //   //       const data = this.route.queryParams.subscribe((_res: any) => {\r\n  //   //         console.log('Search Term', _res);\r\n  //   //         if (Object.keys(_res).length !== 0) {\r\n  //   //           //  this.ApplysearchDesginAndSurvey(_res.serchTerm)\r\n  //   //           this.filterData(_res.serchTerm);\r\n  //   //         } else {\r\n  //   //           this.surveyRefreshSubscription = this.utils.getHomepageSurveyRefresh().subscribe((result) => {\r\n  //   //             this.getSurveys(null);\r\n  //   //           });\r\n  //   //         }\r\n  //   //       });\r\n  //   //     }\r\n  //   //   }\r\n  //   // });\r\n  // }\r\n  getSurveys(event?) {\r\n    let showLoader = true;\r\n    if (event != null && event !== undefined) {\r\n      showLoader = false;\r\n    }\r\n    this.fetchPendingSurveys(event,showLoader);\r\n  }\r\n\r\n  fetchPendingSurveys(event, showLoader: boolean) {\r\n    this.listOfSurveyData = [];\r\n    this.listOfSurveyDataHelper = [];\r\n    console.log(\"data\",this.segments);\r\n    this.utils.showLoadingWithPullRefreshSupport(showLoader, 'Getting Surveys').then((success) => {\r\n      this.apiService.getSurveyorSurveys(this.segments).subscribe(response => {\r\n        this.utils.hideLoadingWithPullRefreshSupport(showLoader).then(() => {\r\n          console.log(response);\r\n          this.formatSurveyData(response);\r\n          if (event !== null) {\r\n            event.target.complete();\r\n          }\r\n        });\r\n      }, responseError => {\r\n        this.utils.hideLoadingWithPullRefreshSupport(showLoader).then(() => {\r\n          if (event !== null) {\r\n            event.target.complete();\r\n          }\r\n          const error: ErrorModel = responseError.error;\r\n          this.utils.errorSnackBar(error.message[0].messages[0].message);\r\n\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  // scrollTo() {\r\n\r\n  //   setTimeout(() => {\r\n  //     console.log(this.el.nativeElement)\r\n  //     let sectionOffset = document.getElementById('todaydate');\r\n  //     console.log(\"sectionOffset == \", sectionOffset);\r\n  //     sectionOffset.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"});\r\n  //   }, 2000)\r\n\r\n  // }\r\n\r\n\r\n\r\n\r\n  // filterData(serchTerm: any) {\r\n  //   console.log(this.listOfSurveyData);\r\n  //   this.filterDataArray = this.listOfSurveyData.filter(x => x.id == serchTerm);\r\n  //   const tempData: SurveyDataHelper[] = [];\r\n  //   this.filterDataArray.forEach((surveyItem) => {\r\n  //     if (tempData.length === 0) {\r\n  //       const listOfSurvey = new SurveyDataHelper();\r\n  //       listOfSurvey.date = this.datePipe.transform(surveyItem.created_at, 'M/d/yy');\r\n  //       listOfSurvey.listOfSurveys.push(surveyItem);\r\n  //       tempData.push(listOfSurvey);\r\n  //     } else {\r\n  //       let added = false;\r\n  //       tempData.forEach((surveyList) => {\r\n  //         if (!added) {\r\n  //           if (surveyList.date === this.datePipe.transform(surveyItem.created_at, 'M/d/yy')) {\r\n  //             surveyList.listOfSurveys.push(surveyItem);\r\n  //             added = true;\r\n  //           }\r\n  //         }\r\n  //       });\r\n  //       if (!added) {\r\n  //         const listOfSurvey = new SurveyDataHelper();\r\n  //         listOfSurvey.date = this.datePipe.transform(surveyItem.created_at, 'M/d/yy');\r\n  //         listOfSurvey.listOfSurveys.push(surveyItem);\r\n  //         tempData.push(listOfSurvey);\r\n  //         added = true;\r\n  //       }\r\n  //     }\r\n  //   });\r\n  //   this.listOfSurveyDataHelper = tempData;\r\n  //   this.cdr.detectChanges();\r\n  // }\r\n\r\n  formatSurveyData(records : SurveyDataModel[]){\r\n    this.listOfSurveyData = this.fillinDynamicData(records);\r\n    console.log(this.listOfSurveyData);\r\n\r\n    const tempData: SurveyDataHelper[] = [];\r\n          this.listOfSurveyData.forEach((surveyItem,i) => {\r\n            this.sDatePassed(surveyItem.datetime,i);\r\n            surveyItem.lateby = this.overdue;\r\n            if (tempData.length === 0) {\r\n              const listOfSurvey = new SurveyDataHelper();\r\n              listOfSurvey.date = this.datePipe.transform(surveyItem.datetime, 'M/dd/yy');\r\n              listOfSurvey.listOfSurveys.push(surveyItem);\r\n              tempData.push(listOfSurvey);\r\n            } else {\r\n              let added = false;\r\n              tempData.forEach((surveyList) => {\r\n                if (!added) {\r\n                  if (surveyList.date === this.datePipe.transform(surveyItem.datetime, 'M/dd/yy')) {\r\n                    surveyList.listOfSurveys.push(surveyItem);\r\n                    added = true;\r\n                  }\r\n                }\r\n              });\r\n              if (!added) {\r\n                const listOfSurvey = new SurveyDataHelper();\r\n                listOfSurvey.date = this.datePipe.transform(surveyItem.datetime, 'M/dd/yy');\r\n                listOfSurvey.listOfSurveys.push(surveyItem);\r\n                tempData.push(listOfSurvey);\r\n                added = true;\r\n              }\r\n            }\r\n          });\r\n          this.listOfSurveyDataHelper=tempData;\r\n          // this.listOfSurveyDataHelper = tempData.sort(function (a, b) {\r\n          //   var dateA = new Date(a.date).getTime(),\r\n          //     dateB = new Date(b.date).getTime();\r\n          //   return dateB - dateA;\r\n          // });\r\n          this.cdr.detectChanges();\r\n  }\r\n\r\n  fillinDynamicData(records : SurveyDataModel[]) : SurveyDataModel[]{\r\n    records.forEach(element => {\r\n      element.formattedjobtype = this.utils.getJobTypeName(element.jobtype);\r\n      element.recordupdatedon = this.utils.formatDateInTimeAgo(element.updated_at);\r\n      this.storage.get(''+element.id).then((data: SurveyStorageModel) => {\r\n        console.log(data);\r\n        if (data) {\r\n          element.totalpercent = data.currentprogress;\r\n          console.log(element);\r\n        }else{\r\n          element.totalpercent = 0;\r\n          console.log(element);\r\n        }\r\n      });\r\n    });\r\n\r\n    return records;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.deactivateNetworkSwitch.unsubscribe();\r\n    this.surveyRefreshSubscription.unsubscribe();\r\n  }\r\n\r\n  // getSurvey(event, showLoader: boolean) {\r\n  //   this.listOfSurveyData = [];\r\n  //   this.listOfSurveyDataHelper = [];\r\n  //   this.utils.showLoadingWithPullRefreshSupport(showLoader, 'Getting Surveys').then((success) => {\r\n  //     this.apiService.getSurvey().subscribe(response => {\r\n  //       this.utils.hideLoadingWithPullRefreshSupport(showLoader).then(() => {\r\n  //         if (event !== null) {\r\n  //           event.target.complete();\r\n  //         }\r\n  //         console.log(response);\r\n  //         this.listOfSurveyData = response;\r\n  //         const tempData: SurveyDataHelper[] = [];\r\n  //         this.listOfSurveyData.forEach((surveyItem) => {\r\n  //           if (tempData.length === 0) {\r\n  //             const listOfSurvey = new SurveyDataHelper();\r\n  //             listOfSurvey.date = this.datePipe.transform(surveyItem.datetime, 'M/d/yy');\r\n  //             listOfSurvey.listOfSurveys.push(surveyItem);\r\n  //             tempData.push(listOfSurvey);\r\n  //           } else {\r\n  //             let added = false;\r\n  //             tempData.forEach((surveyList) => {\r\n  //               if (!added) {\r\n  //                 if (surveyList.date === this.datePipe.transform(surveyItem.datetime, 'M/d/yy')) {\r\n  //                   surveyList.listOfSurveys.push(surveyItem);\r\n  //                   added = true;\r\n  //                 }\r\n  //               }\r\n  //             });\r\n  //             if (!added) {\r\n  //               const listOfSurvey = new SurveyDataHelper();\r\n  //               listOfSurvey.date = this.datePipe.transform(surveyItem.datetime, 'M/d/yy');\r\n  //               listOfSurvey.listOfSurveys.push(surveyItem);\r\n  //               tempData.push(listOfSurvey);\r\n  //               added = true;\r\n  //             }\r\n  //           }\r\n  //         });\r\n  //         this.listOfSurveyDataHelper = tempData;\r\n  //         this.cdr.detectChanges();\r\n  //       });\r\n  //     }, responseError => {\r\n  //       this.utils.hideLoadingWithPullRefreshSupport(showLoader).then(() => {\r\n  //         if (event !== null) {\r\n  //           event.target.complete();\r\n  //         }\r\n  //         const error: ErrorModel = responseError.error;\r\n  //         this.utils.errorSnackBar(error.message[0].messages[0].message);\r\n  //       });\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  // getSurveyorSurveys(event, showLoader: boolean) {\r\n  //   this.listOfSurveyData = [];\r\n  //   this.listOfSurveyDataHelper = [];\r\n  //   this.utils.showLoadingWithPullRefreshSupport(showLoader, 'Getting Surveys').then((success) => {\r\n  //     this.apiService.getSurveyorSurveys(\"\").subscribe(response => {\r\n  //       this.utils.hideLoadingWithPullRefreshSupport(showLoader).then(() => {\r\n  //         if (event !== null) {\r\n  //           event.target.complete();\r\n  //         }\r\n  //         console.log(response);\r\n  //         this.listOfSurveyData = response;\r\n  //         const tempData: SurveyDataHelper[] = [];\r\n  //         this.listOfSurveyData.forEach((surveyItem) => {\r\n  //           if (tempData.length === 0) {\r\n  //             const listOfSurvey = new SurveyDataHelper();\r\n  //             listOfSurvey.date = this.datePipe.transform(surveyItem.datetime, 'M/d/yy');\r\n  //             listOfSurvey.listOfSurveys.push(surveyItem);\r\n  //             tempData.push(listOfSurvey);\r\n  //           } else {\r\n  //             let added = false;\r\n  //             tempData.forEach((surveyList) => {\r\n  //               if (!added) {\r\n  //                 if (surveyList.date === this.datePipe.transform(surveyItem.datetime, 'M/d/yy')) {\r\n  //                   surveyList.listOfSurveys.push(surveyItem);\r\n  //                   added = true;\r\n  //                 }\r\n  //               }\r\n  //             });\r\n  //             if (!added) {\r\n  //               const listOfSurvey = new SurveyDataHelper();\r\n  //               listOfSurvey.date = this.datePipe.transform(surveyItem.datetime, 'M/d/yy');\r\n  //               listOfSurvey.listOfSurveys.push(surveyItem);\r\n  //               tempData.push(listOfSurvey);\r\n  //               added = true;\r\n  //             }\r\n  //           }\r\n  //         });\r\n  //         this.listOfSurveyDataHelper = tempData;\r\n  //         this.cdr.detectChanges();\r\n  //       });\r\n  //     }, responseError => {\r\n  //       this.utils.hideLoadingWithPullRefreshSupport(showLoader).then(() => {\r\n  //         if (event !== null) {\r\n  //           event.target.complete();\r\n  //         }\r\n  //         const error: ErrorModel = responseError.error;\r\n  //         this.utils.errorSnackBar(error.message[0].messages[0].message);\r\n  //       });\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  openAddressOnMap(address: string,event) {\r\n    event.stopPropagation();\r\n    this.launchNavigator.navigate(address, this.options);\r\n  }\r\n\r\n  dismissBottomSheet() {\r\n    console.log(\"hello cancel\");\r\n    this.drawerState = DrawerState.Bottom;\r\n    this.utils.setBottomBarHomepage(true);\r\n    this.listOfAssignees=[];\r\n   // this.assignForm.get('comment').setValue(\"\");\r\n  }\r\n\r\n  assignToSurveyor() {\r\n    debugger;\r\n    console.log(\"hello\");\r\n    console.log(this.surveyData.createdby.id);\r\n\r\n    if(this.assignForm.status === 'INVALID' && (this.surveyData.status === 'reviewassigned' || this.surveyData.status === 'reviewfailed' || this.surveyData.status === 'reviewpassed')){\r\n      this.utils.errorSnackBar('Please select a analyst');\r\n    }\r\n    else if (this.assignForm.status === 'INVALID') {\r\n      this.utils.errorSnackBar('Please select a surveyor');\r\n    }\r\n    else if( this.reviewAssignedTo!=null && (this.selectedDesigner.id==this.reviewAssignedTo.id)){\r\n      this.utils.errorSnackBar(\"This survey request has been already assigned to\"+\" \"+this.selectedDesigner.firstname+\" \"+this.selectedDesigner.lastname)\r\n\r\n    }\r\n    else {\r\n\r\n\r\n      var surveystarttime = new Date();\r\n      var milisecond = surveystarttime.getTime();\r\n    var additonalhours = 0;\r\n    if(this.surveyData.requesttype == \"prelim\"){\r\n      console.log(parseInt(this.selectedDesigner.jobcount) );\r\n      additonalhours = parseInt(this.selectedDesigner.jobcount) * 2;\r\n\r\n      surveystarttime.setHours( surveystarttime.getHours() + additonalhours );\r\n    }else{\r\n      additonalhours = parseInt(this.selectedDesigner.jobcount) * 6;\r\n      surveystarttime.setHours( surveystarttime.getHours() + additonalhours );\r\n    }\r\n    console.log(this.selectedDesigner);\r\n    var postData = {};\r\n    if (this.surveyData.createdby.id == this.userData.id) {\r\n      debugger;\r\n      if (this.selectedDesigner.parent.id == this.userData.parent.id) {\r\n        if(this.selectedDesigner.role.type==\"qcinspector\"){\r\n          postData = {\r\n            reviewassignedto: this.selectedDesigner.id,\r\n            status: \"reviewassigned\",\r\n            reviewstarttime: milisecond\r\n          };\r\n        }\r\n       if(this.selectedDesigner.role.type==\"surveyors\") { postData = {\r\n          assignedto: this.selectedDesigner.id,\r\n          isoutsourced: \"false\",\r\n          status: \"surveyassigned\",\r\n          surveystarttime: surveystarttime\r\n        };\r\n\r\n      }\r\n\r\n      }\r\n      else {\r\n        postData = {\r\n          outsourcedto: this.selectedDesigner.id,\r\n          isoutsourced: \"true\",\r\n          status: \"outsourced\"\r\n        };\r\n      }\r\n    } else {\r\n      if(this.selectedDesigner.role.type==\"surveyors\"){\r\n        postData = {\r\n        assignedto: this.selectedDesigner.id,\r\n        status: \"surveyassigned\",\r\n        surveystarttime: surveystarttime\r\n      };\r\n    }\r\n      if(this.selectedDesigner.role.type==\"qcinspector\"){\r\n        postData = {\r\n          reviewassignedto: this.selectedDesigner.id,\r\n          status: \"reviewassigned\",\r\n          reviewstarttime: milisecond\r\n        };\r\n      }\r\n    }\r\n    this.utils.showLoading('Assigning').then(()=>{\r\n      this.apiService.updateSurveyForm(postData, this.surveyId).subscribe((value) => {\r\n        this.utils.hideLoading().then(()=>{\r\n          ;\r\n          this.createNewDesignChatGroup(value);\r\n          console.log('reach ', value);\r\n\r\n          this.utils.showSnackBar('Survey request has been assigned to' + ' ' + this.selectedDesigner.firstname +\" \"+this.selectedDesigner.lastname + ' ' + 'successfully');\r\n\r\n          this.dismissBottomSheet();\r\n          this.showBottomDraw = false;\r\n          this.utils.sethomepageSurveyRefresh(true);\r\n\r\n        })\r\n      }, (error) => {\r\n        this.utils.hideLoading();\r\n        this.dismissBottomSheet();\r\n        this.showBottomDraw = false;\r\n      });\r\n    })\r\n    }\r\n  }\r\n  generatePdf(id,event){\r\n    event.stopPropagation();\r\n    this.utils.showLoading('Generating PDF').then(()=>{\r\n      this.apiService.generatePdf(id).subscribe(res=>{\r\n        this.utils.hideLoading();\r\n        console.log(res);\r\n        this.utils.sethomepageSurveyRefresh(true);\r\n\r\n      },err=>{\r\n        this.utils.hideLoading();\r\n        this.utils.showSnackBar('Error in generating PDF');\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n\r\n  openAnalysts(id:number,surveyData){\r\n    this.listOfAssignees=[];\r\n    console.log(this.listOfAssignees);\r\n    this.surveyData=surveyData;\r\n    console.log(surveyData);\r\n    this.reviewAssignedTo = surveyData.reviewassignedto;\r\n    console.log(this.reviewAssignedTo);\r\n    if (this.listOfAssignees.length === 0) {\r\n      this.utils.showLoading('Getting Analysts').then(() => {\r\n        this.apiService.getAnalysts().subscribe(assignees => {\r\n          this.utils.hideLoading().then(() => {\r\n            this.listOfAssignees = [];\r\n            // this.listOfAssignees.push(this.utils.getDefaultAssignee(this.storage.getUserID()));\r\n            assignees.forEach(item => this.listOfAssignees.push(item));\r\n            console.log(this.listOfAssignees);\r\n            this.showBottomDraw = true;\r\n            this.surveyId = id;\r\n            this.utils.setBottomBarHomepage(false);\r\n            this.drawerState = DrawerState.Docked;\r\n            this.assignForm.patchValue({\r\n              assignedto: ''\r\n            });\r\n          });\r\n        }, (error) => {\r\n          this.utils.hideLoading().then(() => {\r\n            this.utils.errorSnackBar('Some error occurred. Please try again later');\r\n          });\r\n        });\r\n      });\r\n\r\n    } else {\r\n      this.surveyId = id;\r\n      this.utils.setBottomBarHomepage(false);\r\n      this.drawerState = DrawerState.Docked;\r\n      this.assignForm.patchValue({\r\n        assignedto: ''\r\n      });\r\n    }\r\n\r\n    }\r\n\r\n\r\n  openSurveyors(id: number,surveyData,event) {\r\n    event.stopPropagation();\r\n    this.listOfAssignees=[];\r\n    console.log(surveyData);\r\n    console.log(this.listOfAssignees);\r\n    this.surveyData=surveyData;\r\n    this.reviewAssignedTo = surveyData.assignedto;\r\n    if (this.listOfAssignees.length === 0) {\r\n      this.utils.showLoading('Getting Surveyors').then(() => {\r\n        this.apiService.getSurveyors().subscribe(assignees => {\r\n          this.utils.hideLoading().then(() => {\r\n            this.listOfAssignees = [];\r\n            // this.listOfAssignees.push(this.utils.getDefaultAssignee(this.storage.getUserID()));\r\n            assignees.forEach(item => this.listOfAssignees.push(item));\r\n            console.log(this.listOfAssignees);\r\n            this.showBottomDraw = true;\r\n            this.surveyId = id;\r\n            this.utils.setBottomBarHomepage(false);\r\n            this.drawerState = DrawerState.Docked;\r\n            this.assignForm.patchValue({\r\n              assignedto: ''\r\n            });\r\n          });\r\n        }, (error) => {\r\n          this.utils.hideLoading().then(() => {\r\n            this.utils.errorSnackBar('Some error occurred. Please try again later');\r\n          });\r\n        });\r\n      });\r\n\r\n    } else {\r\n      this.surveyId = id;\r\n      this.utils.setBottomBarHomepage(false);\r\n      this.drawerState = DrawerState.Docked;\r\n      this.assignForm.patchValue({\r\n        assignedto: ''\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n\r\n  selfAssign(id: number,surveyData){\r\n    var designstarttime = new Date();\r\n    var milisecond = designstarttime.getTime();\r\nvar postData={}\r\npostData = {\r\n  reviewassignedto: this.userData.id,\r\n  status: \"reviewassigned\",\r\n  reviewstarttime: milisecond\r\n};\r\nthis.utils.showLoading('Assigning').then(()=>{\r\n  this.apiService.updateSurveyForm(postData,id).subscribe((value) => {\r\n    this.utils.hideLoading().then(()=>{\r\n      ;\r\n      console.log('reach ', value);\r\n    this.utils.showSnackBar('Design request has been assigned to you successfully');\r\n    this.utils.sethomepageSurveyRefresh(true);\r\n\r\n    })\r\n  }, (error) => {\r\n    this.utils.hideLoading();\r\n\r\n  });\r\n})\r\n\r\n  }\r\n\r\n  // getSurveys(event) {\r\n  //   let showLoader = true;\r\n  //   if (event != null && event !== undefined) {\r\n  //     showLoader = false;\r\n  //   }\r\n  //   if (this.storage.getUser().role.id === ROLES.Surveyor) {\r\n  //     this.getSurveyorSurveys(event, showLoader);\r\n  //   } else {\r\n  //     this.getSurvey(event, showLoader);\r\n  //   }\r\n  // }\r\n\r\n  sDatePassed(datestring: any,i){\r\n    var checkdate = moment(datestring, \"YYYYMMDD\");\r\n    var todaydate = moment(new Date(), \"YYYYMMDD\");\r\n    var lateby = todaydate.diff(checkdate, \"days\");\r\n    this.overdue = lateby;\r\n    console.log(this.overdue,\">>>>>>>>>>>>>>>>>.\");\r\n\r\n  }\r\n  getassignedata(asssignedata){\r\n    this.selectedDesigner = asssignedata;\r\n\r\n  }\r\n\r\n\r\n  raisepermit(data:any,event){\r\n    event.stopPropagation();\r\n    let objToSend: NavigationExtras = {\r\n      queryParams: {\r\n         surveyData:data,\r\n         tabsDisabled:true,\r\n         nonEditableField:true\r\n        },\r\n      skipLocationChange: false,\r\n      fragment: 'top'\r\n  };\r\n\r\nconsole.log(objToSend);\r\nthis.router.navigate(['/permitschedule/'], {\r\nstate: { productdetails: objToSend }\r\n});\r\n  }\r\n\r\n  async openreviewPassed(id,designData){\r\n    this.surveyId=id\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'alertClass',\r\n      header: 'Confirm!',\r\n      message:'Would you like to  Add Comments!!',\r\n      inputs:\r\n       [ {name:'comment',\r\n       id:'comment',\r\n          type:'textarea',\r\n        placeholder:'Enter Comment'}\r\n        ] ,\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n          }\r\n        }, {\r\n          text: 'deliver',\r\n          handler: (alertData) => {\r\n            var postData= {};\r\n            if(alertData.comment!=\"\"){\r\n             postData = {\r\n              status: \"delivered\",\r\n              comments: alertData.comment ,\r\n               };}\r\n               else{\r\n                postData = {\r\n                  status: \"delivered\",\r\n                   };\r\n               }\r\n               console.log(postData);\r\n               this.apiService.updateSurveyForm(postData, this.surveyId).subscribe((value) => {\r\n                this.utils.hideLoading().then(()=>{\r\n                  ;\r\n                  console.log('reach ', value);\r\n                 this.utils.showSnackBar('Survey request has been delivered successfully');\r\n\r\n                  this.utils.setHomepageDesignRefresh(true);\r\n                })\r\n              }, (error) => {\r\n                this.utils.hideLoading();\r\n                ;\r\n              });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n\r\n\r\n\r\n  }\r\n\r\n  createNewDesignChatGroup(survey:SurveyDataModel) {\r\n    var GUID = survey.chatid;\r\n    var address = survey.address.substring(0, 60);\r\n    var groupName = survey.name + \"_\" + address;\r\n\r\n    var groupType = CometChat.GROUP_TYPE.PRIVATE;\r\n    var password = \"\";\r\n\r\n    var group = new CometChat.Group(GUID, groupName, groupType, password);\r\n\r\n    CometChat.createGroup(group).then(\r\n      group => {\r\n        let membersList = [\r\n          new CometChat.GroupMember(\"\" + survey.createdby.id, CometChat.GROUP_MEMBER_SCOPE.ADMIN),\r\n          new CometChat.GroupMember(\"\" + this.userData.id, CometChat.GROUP_MEMBER_SCOPE.ADMIN)\r\n        ];\r\n        CometChat.addMembersToGroup(group.getGuid(), membersList, []).then(\r\n          response => {\r\n            // if(design.requesttype == \"permit\"){\r\n            //   let postdata={\r\n            //     chatid:GUID\r\n            //   // }\r\n            // }\r\n\r\n              // this.apiService.updateSurveyForm(postdata,this.surveyId).subscribe(res=>{\r\n                // console.log(res);\r\n                // this.chatid=res.chatid;\r\n                // console.log(this.chatid);\r\n                this.updatechat_id=true;\r\n                this.addUserToGroupChat(GUID);\r\n\r\n              // })\r\n              // this.updateItemInList(LISTTYPE.NEW, design);\r\n            // }else{\r\n              // this.updateItemInPermitList(LISTTYPE.NEW, design);\r\n            // }\r\n          },\r\n          error => {\r\n          }\r\n        );\r\n      },\r\n      error => {\r\n\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n        addUserToGroupChat(GUID) {\r\n\r\n        var userscope = CometChat.GROUP_MEMBER_SCOPE.PARTICIPANT;\r\n\r\n          // userscope = CometChat.GROUP_MEMBER_SCOPE.ADMIN;\r\n\r\n        let membersList = [\r\n          new CometChat.GroupMember(\"\" + this.selectedDesigner.id, userscope)\r\n        ];\r\n        CometChat.addMembersToGroup(GUID, membersList, []).then(\r\n          response => {\r\n\r\n          },\r\n          error => {\r\n\r\n          }\r\n        );\r\n        }\r\n\r\n\r\n        setupCometChat() {\r\n          let userId = this.storageService.getUserID()\r\n          const user = new CometChat.User(userId);\r\n          user.setName(this.storageService.getUser().firstname + ' ' + this.storageService.getUser().lastname);\r\n          const appSetting = new CometChat.AppSettingsBuilder().subscribePresenceForAllUsers().setRegion(COMETCHAT_CONSTANTS.REGION).build();\r\n          CometChat.init(COMETCHAT_CONSTANTS.APP_ID, appSetting).then(\r\n            () => {\r\n              console.log('Initialization completed successfully');\r\n              // if(this.utilities.currentUserValue != null){\r\n                // You can now call login function.\r\n                CometChat.login(userId,  COMETCHAT_CONSTANTS.API_KEY).then(\r\n                  (user) => {\r\n                    console.log('Login Successful:', { user });\r\n                  },\r\n                  error => {\r\n                    console.log('Login failed with exception:', { error });\r\n                  }\r\n                );\r\n            // }\r\n            },\r\n            error => {\r\n              console.log('Initialization failed with error:', error);\r\n            }\r\n          );\r\n        }\r\n\r\n\r\n\r\n  close() {\r\n    if (this.showBottomDraw === true) {\r\n      this.showBottomDraw = false;\r\n      this.drawerState = DrawerState.Bottom;\r\n      this.utils.setBottomBarHomepage(true);\r\n    } else {\r\n      this.showBottomDraw = true;\r\n    }\r\n  }\r\n\r\n    shareWhatsapp(designData){\r\n    this.socialsharing.share(designData.prelimdesign.url);\r\n  }\r\n\r\n   async shareViaEmails(id,designData){\r\n    const modal = await this.modalController.create({\r\n      component: EmailModelPage,\r\n      cssClass: 'email-modal-css',\r\n      componentProps: {\r\n        id:id,\r\n        designData:designData\r\n      },\r\n\r\n    });\r\n    modal.onDidDismiss().then((data) => {\r\n      console.log(data)\r\n      if(data.data.cancel=='cancel'){\r\n      }else{\r\n        this.getSurveys(null)\r\n      }\r\n  });\r\n      return await modal.present();\r\n   }\r\n   assignedTo(surveyData,event){\r\n   event.stopPropagation();\r\n    let postData = {\r\n      assignedto: this.userData.id,\r\n      status: \"surveyinprocess\"\r\n    };\r\n    this.apiService.updateSurveyForm(postData,surveyData.id).subscribe(res=>{\r\n      console.log(res);\r\n    })\r\n    this.router.navigate(['/camera/' + surveyData.id + '/' + surveyData.jobtype + '/' + surveyData.city + '/' + surveyData.state + '/' + surveyData.latitude + '/' + surveyData.longitude]);\r\n\r\n\r\n  }\r\n  makeDirectory(){\r\n    this.platform.ready().then(() => {\r\n      if (this.platform.is('ios')) {\r\n        this.storageDirectory = this.file.externalRootDirectory+'/Wattmonk/';\r\n      } else if (this.platform.is('android')) {\r\n        this.storageDirectory = this.file.externalRootDirectory+'/Wattmonk/';\r\n      } else {\r\n        this.storageDirectory = this.file.cacheDirectory;\r\n      }\r\n    });\r\n  }\r\n\r\n  designDownload(designData){\r\n  let pdf=   designData.surveypdf==null ? '': designData.surveypdf;\r\n  this.platform.ready().then(()=>{\r\n    this.file.resolveDirectoryUrl(this.storageDirectory).then(resolvedDirectory=>{\r\n      this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(\r\n        result => console.log('Has permission?',result.hasPermission),\r\n        err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE)\r\n      );\r\n      this.file.checkFile(resolvedDirectory.nativeURL,pdf.url).then(data=>{\r\n        console.log(data);\r\n\r\n        if(data==true){\r\n\r\n        }else{\r\n          console.log('not found!');\r\n          throw { code: 1, message: 'NOT_FOUND_ERR' };\r\n        }\r\n\r\n      }).catch(async err=>{\r\n        console.log('Error occurred while checking local files:');\r\n        console.log(err);\r\n        if (err.code == 1) {\r\n          const fileTransfer: FileTransferObject = this.transfer.create();\r\n          // this.utils.showLoading('Downloading').then(()=>{\r\n            fileTransfer.download(url, this.storageDirectory + pdf.url).then((entry) => {\r\n              // this.utils.hideLoading().then(()=>{\r\n                console.log('download complete: ' + entry.toURL());\r\n                this.utils.showSnackBar(\"Survey File Downloaded Successfully\");\r\n\r\n                // this.clickSub = this.localnotification.on('click').subscribe(data => {\r\n                //   console.log(data)\r\n                //   path;\r\n                // })\r\n                this.localnotification.schedule({text:'Survey File Downloaded Successfully', foreground:true, vibrate:true })\r\n              // }, (error) => {\r\n              //   // handle error\r\n              //   console.log(error);\r\n\r\n              // });\r\n              })\r\n          // })\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let dir_name = 'Wattmonk';\r\n    let path = '';\r\n    const url = designData.surveypdf.url;\r\n   const fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n\r\n   let result = this.file.createDir(this.file.externalRootDirectory, dir_name, true);\r\n  result.then((resp) => {\r\n   path = resp.toURL();\r\n   console.log(path);\r\n\r\n   fileTransfer.download(url, path + designData.surveypdf.hash + designData.surveypdf.ext).then((entry) => {\r\n     console.log('download complete: ' + entry.toURL());\r\n     this.utils.showSnackBar(\"Survey File Downloaded Successfully\");\r\n\r\n     // this.clickSub = this.localnotification.on('click').subscribe(data => {\r\n     //   console.log(data)\r\n     //   path;\r\n     // })\r\n     this.localnotification.schedule({text:'Downloaded Successfully', foreground:true, vibrate:true })\r\n   }, (error) => {\r\n     // handle error\r\n   });\r\n  })\r\n\r\n\r\n  }\r\n\r\n  resumeSurvey(surveyData,event){\r\n    event.stopPropagation();\r\n    this.router.navigate(['/camera/' + surveyData.id + '/' + surveyData.jobtype + '/' + surveyData.city + '/' + surveyData.state + '/' + surveyData.latitude + '/' + surveyData.longitude]);\r\n  }\r\n\r\n  gotoActivity(surveyData,event){\r\n    console.log(event)\r\n        event.stopPropagation();\r\n      this.router.navigate(['/activity' + '/' + surveyData.id + '/survey'])\r\n    \r\n    }\r\n    \r\n    gotoDetails(surveyData,$event){\r\n      // $event.preventDefault();\r\n      // $event.stopPropagation();\r\n      this.router.navigate(['/survey-detail/' + surveyData.id])\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class SurveyDataHelper {\r\n  listOfSurveys: SurveyDataModel[];\r\n  date: any;\r\n  lateby:any;\r\n\r\n  constructor() {\r\n    this.listOfSurveys = [];\r\n  }\r\n}\r\n","export default \"<ion-segment scrollable (ionChange)=\\\"segmentChanged($event)\\\"\\r\\n    value=\\\"status=created&status=outsourced&status=requestaccepted\\\">\\r\\n    <ion-segment-button value=\\\"status=created&status=outsourced&status=requestaccepted\\\">\\r\\n        <ion-label class=\\\"segment-btn\\\">New</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"status=surveyassigned&status=surveyinprocess\\\">\\r\\n        <ion-label class=\\\"segment-btn\\\">In Progress</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"status=surveycompleted\\\">\\r\\n        <ion-label class=\\\"segment-btn\\\">Completed</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <!-- <ion-segment-button value=\\\"status=reviewassigned&status=reviewpassed&status=reviewfailed\\\">\\r\\n        <ion-label class=\\\"segment-btn\\\">Review</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"status=delivered\\\">\\r\\n        <ion-label class=\\\"segment-btn\\\">Delivered</ion-label>\\r\\n    </ion-segment-button> -->\\r\\n</ion-segment>\\r\\n\\r\\n<ion-content (click)=\\\"close()\\\" style=\\\"padding-bottom: 250px;\\\">\\r\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"getSurveys($event)\\\">\\r\\n        <ion-refresher-content></ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n    <ion-grid *ngIf=\\\"listOfSurveyDataHelper.length !== 0\\\">\\r\\n        <ion-row *ngFor=\\\"let item of listOfSurveyDataHelper;let i = index\\\">\\r\\n            <ion-col size=\\\"12\\\" class=\\\"ion-margin-top\\\">\\r\\n                            <span  class=\\\"ion-padding\\\" *ngIf=\\\"today === item.date\\\" id='todaydate' >\\r\\n                                Today\\r\\n                              </span>\\r\\n                        <span class=\\\"ion-padding\\\" *ngIf=\\\"today !== item.date\\\">\\r\\n                                  {{item.date | date: 'dd MMM yyyy'}}\\r\\n                            </span>\\r\\n                    </ion-col>\\r\\n            <ion-col *ngFor=\\\"let surveyData of item.listOfSurveys;let i = index \\\" size=\\\"12\\\">\\r\\n                <ion-card class=\\\"ion-no-padding custom-card ion-no-margin\\\" style=\\\"height: 100%;\\\" (click)=\\\"gotoDetails(surveyData,$event)\\\">\\r\\n                    <p class=\\\"customer-name\\\"><span  routerDirection=\\\"forward\\\">{{surveyData.name}}</span>\\r\\n                        <span fill=\\\"clear\\\" background-border=\\\"clear\\\"   (click)=\\\"gotoActivity(surveyData,$event)\\\"  class=\\\"imagebutton\\\"  size=\\\"small\\\"  ><img src=\\\"/assets/images/activitylist.png\\\" style=\\\"height: 20px;\\\" /></span>\\r\\n                    </p>\\r\\n                    <p style=\\\"margin:0px\\\">\\r\\n                        <span  routerDirection=\\\"forward\\\"\\r\\n                        class=\\\"chipdetail\\\" style=\\\"background-color: #1289A7;\\\"\\r\\n                        [routerLink]=\\\"['/design-details/',surveyData.id]\\\" routerDirection=\\\"forward\\\">\\r\\n                        {{utils.formatTimeInDisplayFormat(surveyData.datetime)}}\\r\\n                    </span>\\r\\n                        <span  routerDirection=\\\"forward\\\"\\r\\n                        *ngIf=\\\"surveyData.status=='surveyassigned'\\\" class=\\\"chipdetail\\\"\\r\\n                        style=\\\"background-color: #3C78D8;\\\"\\r\\n                        routerDirection=\\\"forward\\\">\\r\\n                        pending\\r\\n                    </span>\\r\\n                    <span  routerDirection=\\\"forward\\\"\\r\\n                        class=\\\"chipdetail\\\" style=\\\"background-color: rgb(246, 77, 10);\\\"\\r\\n                        *ngIf=\\\"surveyData.lateby > 0\\\">Overdue</span>\\r\\n                        <span class=\\\"chipdetail\\\" style=\\\"background-color: #1289A7;;\\\" *ngIf=\\\"surveyData.status == 'created'\\\">Unassigned</span>\\r\\n                    </p>\\r\\n                    <p style=\\\"margin:0px\\\">\\r\\n\\r\\n                        <span class=\\\"customer-email\\\"\\r\\n                            routerDirection=\\\"forward\\\">{{surveyData.email}}</span>\\r\\n                        <span *ngIf=\\\"surveyData.lateby > 1\\\" class=\\\"latebystyle\\\"><strong>Late by {{surveyData.lateby}}\\r\\n                                days</strong></span>\\r\\n                        <span *ngIf=\\\"surveyData.lateby == 1\\\" class=\\\"latebystyle\\\"><strong>Late by a day</strong></span>\\r\\n                    </p>\\r\\n                    <span class=\\\"recordupdatedon\\\">Updated {{surveyData.recordupdatedon}}</span>\\r\\n                    <a href=\\\"tel:{{surveyData.phonenumber}}\\\" style=\\\"text-decoration: none;\\\" class=\\\"z-100\\\">\\r\\n                        <span class=\\\"customer-phone\\\">{{surveyData?.phonenumber}}</span></a>\\r\\n                    <span class=\\\"customer-address z-100 m-0\\\"\\r\\n                        (click)=\\\"openAddressOnMap(surveyData.address,$event)\\\">{{(surveyData.address | slice:0:60) + (surveyData.address?.length > 60 ? '...' : '')}}</span>\\r\\n                    <p style=\\\"margin: 0px;\\\" class=\\\"ion-no-padding\\\" *ngIf=\\\"segments=='status=surveyassigned&status=surveyinprocess' || segments=='status=surveycompleted'\\\">\\r\\n                        <!-- <ion-col style=\\\"font-size: 0.8em;\\\"> -->\\r\\n                            <span><strong>Assigned to : {{surveyData.assignedto.firstname | titlecase}} {{surveyData.assignedto.lastname | titlecase}}</strong></span>\\r\\n                        <!-- </ion-col> -->\\r\\n                    </p>\\r\\n                    <ion-row style=\\\"margin-bottom: 8px;\\\"  class=\\\"m-0\\\">\\r\\n\\r\\n                        <span class=\\\"chipdetail\\\" style=\\\"background-color: #95afc0;\\\">{{surveyData.source}}</span>\\r\\n                        <span class=\\\"chipdetail\\\" style=\\\"background-color: #95afc0;align-self: center;\\\" >{{surveyData?.jobtype=='pvbattery' ? 'PV + Battery' : surveyData?.jobtype | uppercase}}</span>\\r\\n\\r\\n\\r\\n                    </ion-row>\\r\\n                    <ion-row class=\\\"ion-no-margin\\\">\\r\\n                        <ion-col><span\\r\\n                                *ngIf=\\\"surveyData.status == 'created' || (surveyData.status == 'requestaccepted' && userData.role.type !== 'clientsuperadmin') || surveyData.status=='requestdeclined'\\\"\\r\\n                                style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color z-100\\\"\\r\\n                                (click)=\\\"openSurveyors(surveyData.id,surveyData,$event)\\\">Assign</span>\\r\\n                            <!-- <ion-col size=\\\"auto\\\" class=\\\"ion-no-margin ion-no-padding\\\" *ngIf=\\\"today==item.date && userData.role.type =='surveyor'\\\"> -->\\r\\n                            <span\\r\\n                            *ngIf=\\\"surveyData.status == 'created' && userData.role.type !== 'clientsuperadmin'\\\"\\r\\n                                style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color z-100\\\" (click)=\\\"assignedTo(surveyData,$event)\\\">\\r\\n                                Start Survey &nbsp;\\r\\n                            </span>\\r\\n                            <!-- <span class=\\\"ion-text-end action-button-color\\\" >Start Survey</span> -->\\r\\n                        </ion-col>\\r\\n                        <!-- <ion-col></ion-col> -->\\r\\n                        <!-- <ion-col  size=\\\"auto\\\" class=\\\"ion-no-margin ion-no-padding\\\" style=\\\"margin-bottom: 5px;\\\"> -->\\r\\n\\r\\n                        <!-- <span *ngIf=\\\"surveyData.status == 'outsourced'\\\" style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\" (click)=\\\"openSurveyors(surveyData.id)\\\"\\r\\n                        >Decline</span>\\r\\n                        <span *ngIf=\\\"surveyData.status == 'outsourced'\\\" style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\" (click)=\\\"openSurveyors(surveyData.id)\\\"\\r\\n                        >Accept</span> -->\\r\\n                        <!-- <span style=\\\"float: right;\\\">\\r\\n                            <ng-container *ngIf=\\\"userData.role.type !=='clientsuperadmin'\\\">\\r\\n                            <ion-col size=\\\"8\\\"  *ngIf=\\\"surveyData.status == 'outsourced'\\\"  class=\\\"ion-text-end action-button-color z-100\\\" (click)=\\\"openSurveyors(surveyData.id,surveyData)\\\">\\r\\n                               Accept\\r\\n                            </ion-col>\\r\\n                            <ion-col size=\\\"4\\\" *ngIf=\\\"surveyData.status == 'outsourced'\\\"  class=\\\"ion-text-end action-button-color z-100\\\" (click)=\\\"openSurveyors(surveyData.id,surveyData)\\\">\\r\\n                            Decline\\r\\n                            </ion-col></ng-container>\\r\\n                        </span> -->\\r\\n                        <!-- <span *ngIf=\\\"surveyData.status == 'requestdeclined' && userData.role.type=='clientsuperadmin'\\\"style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color z-100\\\" (click)=\\\"openSurveyors(surveyData.id)\\\"\\r\\n                        >Reassign</span>\\r\\n                        </ion-col> -->\\r\\n\\r\\n                        <!-- <span *ngIf=\\\"(designData.isoutsourced=='true' && designData.outsourcedcompany=='Wattmonk' && (userData.role.type=='wattmonkadmins'|| userData.role.type=='superadmin')) || (designData.isoutsourced=='false' && designData.outsourcedcompany==null && (userData.role.type=='wattmonkadmins'|| userData.role.type=='superadmin'|| userData.role.type=='clientsuperadmin'))\\\" style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\" (click)=\\\"openAnalysts(designData.id,designData)\\\"\\r\\n                            >Assign Review</span> -->\\r\\n\\r\\n                        <ion-col size=\\\"auto\\\" class=\\\"ion-no-margin ion-no-padding\\\"\\r\\n                            *ngIf=\\\"segments=='status=surveyassigned&status=surveyinprocess'\\\"\\r\\n                            style=\\\"margin-bottom: 5px;\\\">\\r\\n                            <span *ngIf=\\\"surveyData.status !=='surveyinprocess'\\\" class=\\\"ion-text-end action-button-color z-100\\\"\\r\\n                                (click)=\\\"openSurveyors(surveyData.id,surveyData,$event)\\\">Reassign</span>\\r\\n                                <span  class=\\\"ion-text-end action-button-color z-100\\\" style=\\\"float:right !important;\\\" *ngIf=\\\"userData.id==surveyData.assignedto?.id\\\" (click)=\\\"resumeSurvey(surveyData,$event)\\\"\\r\\n                                routerDirection=\\\"forward\\\">\\r\\n                                &nbsp;    Resume Survey\\r\\n                                </span>\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"auto\\\" class=\\\" \\\"\\r\\n                            *ngIf=\\\"segments=='status=surveycompleted'\\\" style=\\\"margin-bottom: 5px;\\\">\\r\\n                            <span *ngIf=\\\"surveyData.surveypdf!== null\\\" style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\" (click)=\\\"designDownload(surveyData)\\\">\\r\\n                                <ion-icon name=\\\"cloud-download-outline\\\"></ion-icon></span>\\r\\n                            <span *ngIf=\\\"(userData.role.type=='clientsuperadmin' || userData.role.type=='clientadmin') && (surveyData.surveypdf== null)\\\" style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\" (click)=\\\"generatePdf(surveyData.id,$event)\\\">\\r\\n                                    Generate PDF  &nbsp; &nbsp;</span>\\r\\n                                <span *ngIf=\\\"(userData.role.type=='clientsuperadmin' || userData.role.type=='clientadmin') && (surveyData.isdesignraised==false || surveyData.isdesignraised==null)\\\" style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\" (click)=\\\"raisepermit(surveyData,$event)\\\">\\r\\n                                    Raise Permit  &nbsp; &nbsp;</span>\\r\\n\\r\\n                            <!-- <span *ngIf=\\\"userData.role.type !='clientsuperadmin'\\\" style=\\\"float:right !important;\\\"\\r\\n                                class=\\\"ion-text-end action-button-color\\\" (click)=\\\"selfAssign(surveyData.id,surveyData)\\\">\\r\\n                                &nbsp; Self Assign</span>\\r\\n                            <span *ngIf=\\\"userData.role.type!=='clientsuperadmin'\\\"\\r\\n                                class=\\\"ion-text-end action-button-color z-100\\\"\\r\\n                                (click)=\\\"openAnalysts(surveyData.id,surveyData)\\\">Assign Review</span> -->\\r\\n                        </ion-col>\\r\\n                        <ion-col size=\\\"auto\\\" class=\\\"ion-no-margin ion-no-padding\\\"\\r\\n                            *ngIf=\\\"segments=='status=reviewassigned&status=reviewpassed&status=reviewfailed'\\\">\\r\\n                            <span *ngIf=\\\"surveyData.status == 'reviewpassed'\\\"\\r\\n                                class=\\\"ion-text-end action-button-color z-100\\\"\\r\\n                                (click)=\\\"openreviewPassed(surveyData.id,surveyData)\\\">&nbsp; Deliver</span>\\r\\n                            <span style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\"\\r\\n                                (click)=\\\"openAnalysts(surveyData.id,surveyData)\\\">&nbsp;Reassign Review</span>\\r\\n                        </ion-col>\\r\\n                                <span  class=\\\"ion-text-end action-button-color z-100\\\" style=\\\"float:right !important;\\\" *ngIf=\\\"userData.id==surveyData.assignedto?.id && surveyData.status=='reviewfailed'\\\"  [routerLink]=\\\"['/camera/' + surveyData.id + '/' + surveyData.jobtype + '/' + surveyData.city + '/' + surveyData.state + '/' + surveyData.latitude + '/' + surveyData.longitude]\\\"\\r\\n                                routerDirection=\\\"forward\\\">\\r\\n                                    Redo Survey\\r\\n                                </span>\\r\\n\\r\\n                        <ion-col *ngIf=\\\"segments=='status=delivered'\\\">\\r\\n                            <span style=\\\"float:right !important;\\\" class=\\\"ion-text-end action-button-color\\\"\\r\\n                                (click)=\\\"shareWhatsapp(surveyData)\\\">\\r\\n                                <ion-icon name=\\\"share-social-outline\\\"></ion-icon>\\r\\n                            </span>&nbsp;\\r\\n                            <span style=\\\"float:right !important;margin-right: 8px;\\\"\\r\\n                                class=\\\"ion-text-end action-button-color\\\"\\r\\n                                (click)=\\\"shareViaEmails(surveyData.id,surveyData)\\\">\\r\\n                                <ion-icon name=\\\"mail\\\"></ion-icon>\\r\\n                            </span>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ng-container  *ngIf=\\\"userData.id==surveyData.assignedto?.id && surveyData.status =='surveyassigned'\\\">\\r\\n                        <ion-progress-bar [value]=\\\"surveyData.totalpercent\\\" mode=\\\"ios\\\" color=\\\"success\\\" class=\\\"progress-bar-height\\\"></ion-progress-bar>\\r\\n                    </ng-container>\\r\\n                    <!-- <span class=\\\"ion-text-end timestamp\\\"  routerDirection=\\\"forward\\\">\\r\\n                                {{surveyData.datetime | date: 'hh:mm a'}}\\r\\n                            </span> -->\\r\\n\\r\\n                </ion-card>\\r\\n\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n            <ion-col size=\\\"12\\\" style=\\\"height: 100px;\\\">\\r\\n            </ion-col>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n    <div *ngIf=\\\"listOfSurveyDataHelper.length === 0\\\" class=\\\"h-100 d-flex flex-column align-center justify-center\\\">\\r\\n        <!-- <div *ngIf=\\\"!netSwitch\\\"> -->\\r\\n        No Surveys found\\r\\n        <!-- </div> -->\\r\\n        <ion-img src=\\\"/assets/images/blank.png\\\" class=\\\"placeholder\\\"></ion-img>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\\r\\n<ion-bottom-drawer [(state)]=\\\"drawerState\\\" [minimumHeight]=\\\"0\\\" [dockedHeight]=\\\"320\\\" [draggable]=\\\"false\\\" [disableDrag]=\\\"true\\\"\\r\\n    [shouldBounce]=\\\"false\\\" [distanceTop]=\\\"0\\\" class=\\\"drawer\\\" style=\\\"z-index: 9999 !important;\\\">\\r\\n    <form [formGroup]=\\\"assignForm\\\">\\r\\n        <ion-grid class=\\\"drawer\\\">\\r\\n            <ion-row>\\r\\n                <ion-col size=\\\"12\\\">\\r\\n                    <app-user-selector (assigneeData)=getassignedata($event) placeholder=\\\"Assign\\\"\\r\\n                        [assignees]=\\\"listOfAssignees\\\" formControlName=\\\"assignedto\\\"></app-user-selector>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row style=\\\"justify-content: flex-end;\\\">\\r\\n                <ion-col size=\\\"auto\\\" style=\\\"padding-top: 0px; margin-right: 6px;\\\">\\r\\n                    <ion-button class=\\\"buttom-drawer-button\\\" fill=\\\"clear\\\" (click)=\\\"assignToSurveyor()\\\">\\r\\n                        Confirm\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"auto\\\">\\r\\n                    <ion-button class=\\\"buttom-drawer-button-cancel\\\" fill=\\\"clear\\\" (click)=\\\"dismissBottomSheet()\\\">\\r\\n                        Cancel\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n        </ion-grid>\\r\\n    </form>\\r\\n\\r\\n</ion-bottom-drawer>\\r\\n\";","export default \".custom-card {\\n  display: flex !important;\\n  flex-direction: column !important;\\n  background: white !important;\\n  border-radius: 4px !important;\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.3) !important;\\n  padding: 8px 12px;\\n}\\n\\n.customer-name {\\n  font-size: 1em;\\n  color: #434343;\\n  font-weight: bold;\\n  display: table;\\n  margin: 0px;\\n}\\n\\n.customer-email {\\n  font-size: 0.8em;\\n  color: #B4B4B4;\\n}\\n\\n.customer-phone {\\n  font-size: 0.8em;\\n  color: #4272B9;\\n}\\n\\n.customer-address {\\n  margin-top: 4px;\\n  margin-bottom: 6px;\\n  font-size: 0.8em;\\n  color: #4272B9;\\n}\\n\\n.timestamp {\\n  font-size: 0.7em;\\n}\\n\\n.chipdetail {\\n  display: inline;\\n  vertical-align: middle;\\n  background-color: #95afc0;\\n  font-size: 0.6em;\\n  padding: 4px 10px;\\n  border-radius: 10px;\\n  text-align: center;\\n  color: #fff;\\n}\\n\\n.cssclass {\\n  --max-height:100% !important;\\n}\\n\\nion-bottom-drawer {\\n  --padding: 0 !important;\\n  padding: 0 !important;\\n  --background: #F3F3F3 !important;\\n  background: #F3F3F3 !important;\\n}\\n\\nion-bottom-drawer ion-content {\\n  --background: #F3F3F3 !important;\\n}\\n\\n.segment-btn {\\n  font-size: 10px !important;\\n}\\n\\n.latebystyle {\\n  float: right;\\n  font-size: 10px;\\n  color: #3C78DB;\\n}\\n\\n.imagebutton {\\n  float: right;\\n  margin-top: 0px;\\n}\\n\\n.alertClass {\\n  background-color: wheat;\\n}\\n\\n.recordupdatedon {\\n  float: right;\\n  font-size: 10px;\\n  font-style: italic;\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxzdXJ2ZXkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3QkFBQTtFQUNBLGlDQUFBO0VBQ0EsNEJBQUE7RUFDQSw2QkFBQTtFQUNBLHFEQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLGNBQUE7RUFDQSxjQUFBO0VBQ0EsaUJBQUE7RUFDQSxjQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUNGOztBQU1BO0VBQ0UsZ0JBQUE7QUFIRjs7QUFPQTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtFQUNBLHlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0FBSkY7O0FBTUE7RUFDRSw0QkFBQTtBQUhGOztBQWtCQTtFQUVFLHVCQUFBO0VBQ0EscUJBQUE7RUFFQSxnQ0FBQTtFQUNBLDhCQUFBO0FBakJGOztBQW1CRTtFQUNFLGdDQUFBO0FBakJKOztBQXNCSTtFQUNFLDBCQUFBO0FBbkJOOztBQXNCSTtFQUNFLFlBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtBQW5CTjs7QUFzQkE7RUFDRSxZQUFBO0VBQ0EsZUFBQTtBQW5CRjs7QUFzQkE7RUFDRSx1QkFBQTtBQW5CRjs7QUFzQkE7RUFDRSxZQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFuQkYiLCJmaWxlIjoic3VydmV5LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbS1jYXJkIHtcclxuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbiAhaW1wb3J0YW50O1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4ICFpbXBvcnRhbnQ7XHJcbiAgYm94LXNoYWRvdzogMCAxcHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjMpICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogOHB4IDEycHg7XHJcbn1cclxuXHJcbi5jdXN0b21lci1uYW1lIHtcclxuICBmb250LXNpemU6IDFlbTtcclxuICBjb2xvcjogIzQzNDM0MztcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBkaXNwbGF5OnRhYmxlO1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG4uY3VzdG9tZXItZW1haWwge1xyXG4gIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgY29sb3I6ICNCNEI0QjQ7XHJcbn1cclxuXHJcbi5jdXN0b21lci1waG9uZSB7XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxuICBjb2xvcjogIzQyNzJCOTtcclxufVxyXG5cclxuLmN1c3RvbWVyLWFkZHJlc3Mge1xyXG4gIG1hcmdpbi10b3A6IDRweDtcclxuICBtYXJnaW4tYm90dG9tOiA2cHg7XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxuICBjb2xvcjogIzQyNzJCOTtcclxufVxyXG5cclxuLnBsYWNlaG9sZGVyIHtcclxuICAvLyB3aWR0aDogNTB2dyAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udGltZXN0YW1wIHtcclxuICBmb250LXNpemU6IDAuN2VtO1xyXG4gXHJcbn1cclxuXHJcbi5jaGlwZGV0YWlse1xyXG4gIGRpc3BsYXk6IGlubGluZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM5NWFmYzA7XHJcbiAgZm9udC1zaXplOiAwLjZlbTtcclxuICBwYWRkaW5nOiA0cHggMTBweDtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG4uY3NzY2xhc3N7XHJcbiAgLS1tYXgtaGVpZ2h0IDoxMDAlICFpbXBvcnRhbnQ7XHJcbiAgLy8gcG9zaXRpb246IGFic29sdXRlO1xyXG4gIC8vIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5cclxuLy8uZHJhd2VyIHtcclxuLy8gIGJhY2tncm91bmQ6ICNGM0YzRjM7XHJcbi8vICAtLWJhY2tncm91bmQ6ICNGM0YzRjM7XHJcbi8vfVxyXG4vL1xyXG4vLy5pb24tYm90dG9tLWRyYXdlci1zY3JvbGxhYmxlLWNvbnRlbnQge1xyXG4vLyAgYmFja2dyb3VuZDogI0YzRjNGMyAhaW1wb3J0YW50O1xyXG4vL31cclxuXHJcbmlvbi1ib3R0b20tZHJhd2VyIHtcclxuXHJcbiAgLS1wYWRkaW5nOiAwICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG5cclxuICAtLWJhY2tncm91bmQ6ICNGM0YzRjMgIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kOiAjRjNGM0YzICFpbXBvcnRhbnQ7XHJcblxyXG4gIGlvbi1jb250ZW50IHtcclxuICAgIC0tYmFja2dyb3VuZDogI0YzRjNGMyAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgXHJcbn1cclxuICAgIC5zZWdtZW50LWJ0bntcclxuICAgICAgZm9udC1zaXplOiAxMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLmxhdGVieXN0eWxle1xyXG4gICAgICBmbG9hdDogcmlnaHQ7IFxyXG4gICAgICBmb250LXNpemU6IDEwcHg7XHJcbiAgICAgIGNvbG9yOiAjM0M3OERCO1xyXG4gICAgfVxyXG5cclxuLmltYWdlYnV0dG9ue1xyXG4gIGZsb2F0OnJpZ2h0O1xyXG4gIG1hcmdpbi10b3A6IDBweDtcclxufVxyXG5cclxuLmFsZXJ0Q2xhc3N7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hlYXQ7XHJcbn1cclxuXHJcbi5yZWNvcmR1cGRhdGVkb257XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIGZvbnQtc2l6ZTogMTBweDtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iXX0= */\";"],"sourceRoot":"webpack:///"}